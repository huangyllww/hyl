/**
 * @file
 *
 * ALIB ASL library
 *
 *
 *
 * @xrefitem bom "File Content Label" "Release Content"
 * @e project:     AGESA
 * @e sub-project: NBIO
 * @e \$Revision: 281175 $   @e \$Date: 2013-12-18 01:53:00 -0600 (Wed, 18 Dec 2013) $
 *
 */
/*
*****************************************************************************
*
* 
* Copyright 2016 - 2019 CHENGDU HAIGUANG IC DESIGN CO., LTD. All Rights Reserved.
* 
* HYGON is granting you permission to use this software (the Materials)
* pursuant to the terms and conditions of your Software License Agreement
* with HYGON.  This header does *NOT* give you permission to use the Materials
* or any rights under HYGON's intellectual property.  Your use of any portion
* of these Materials shall constitute your acceptance of those terms and
* conditions.  If you do not agree to the terms and conditions of the Software
* License Agreement, please do not use any portion of these Materials.
* 
* CONFIDENTIALITY:  The Materials and all other information, identified as
* confidential and provided to you by HYGON shall be kept confidential in
* accordance with the terms and conditions of the Software License Agreement.
* 
* LIMITATION OF LIABILITY: THE MATERIALS AND ANY OTHER RELATED INFORMATION
* PROVIDED TO YOU BY HYGON ARE PROVIDED "AS IS" WITHOUT ANY EXPRESS OR IMPLIED
* WARRANTY OF ANY KIND, INCLUDING BUT NOT LIMITED TO WARRANTIES OF
* MERCHANTABILITY, NONINFRINGEMENT, TITLE, FITNESS FOR ANY PARTICULAR PURPOSE,
* OR WARRANTIES ARISING FROM CONDUCT, COURSE OF DEALING, OR USAGE OF TRADE.
* IN NO EVENT SHALL HYGON OR ITS LICENSORS BE LIABLE FOR ANY DAMAGES WHATSOEVER
* (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF PROFITS, BUSINESS
* INTERRUPTION, OR LOSS OF INFORMATION) ARISING OUT OF HYGON'S NEGLIGENCE,
* GROSS NEGLIGENCE, THE USE OF OR INABILITY TO USE THE MATERIALS OR ANY OTHER
* RELATED INFORMATION PROVIDED TO YOU BY HYGON, EVEN IF HYGON HAS BEEN ADVISED OF
* THE POSSIBILITY OF SUCH DAMAGES.  BECAUSE SOME JURISDICTIONS PROHIBIT THE
* EXCLUSION OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES,
* THE ABOVE LIMITATION MAY NOT APPLY TO YOU.
* 
* HYGON does not assume any responsibility for any errors which may appear in
* the Materials or any other related information provided to you by HYGON, or
* result from use of the Materials or any related information.
* 
* You agree that you will not reverse engineer or decompile the Materials.
* 
* NO SUPPORT OBLIGATION: HYGON is not obligated to furnish, support, or make any
* further information, software, technical information, know-how, or show-how
* available to you.  Additionally, HYGON retains the right to modify the
* Materials at any time, without notice, and is not obligated to provide such
* modified Materials to you.
* 
* AMD GRANT HYGON DECLARATION: ADVANCED MICRO DEVICES, INC.(AMD) granted HYGON has
* the right to redistribute HYGON's Agesa version to BIOS Vendors and HYGON has
* the right to make the modified version available for use with HYGON's PRODUCT.
* ***************************************************************************
*
*/

DefinitionBlock (
  "ALIB.aml",
  "SSDT",
  2,
  "HYGON",
  "ALIB",
  0x2
  )
{
  Scope(\_SB) {
    //-----------------------------------------------------------------
    // Transfer data
    //-----------------------------------------------------------------
    Name (PcieBaseAddress, 0xffffffff)
    //-----------------------------------------------------------------
    Name (ADBG, Buffer (256) {})
    //-----------------------------------------------------------------
    // Transfer data block
    //-----------------------------------------------------------------
    include ("DataBlock.asl")
    //-----------------------------------------------------------------
    // ALIB interface
    //-----------------------------------------------------------------
    include ("Alib.asl")
    //-----------------------------------------------------------------
    // Hotplug API
    //-----------------------------------------------------------------
    External(\_SB.ALIC,  MethodObj)
    include ("Hotplug.asl")
    //-----------------------------------------------------------------
    // ACDC objects
    //-----------------------------------------------------------------
    include ("Acdc.asl")
    //-----------------------------------------------------------------
    // PSPP objects
    //-----------------------------------------------------------------
    include ("Pspp.asl")
    //-----------------------------------------------------------------
    // SMN Registers
    //-----------------------------------------------------------------
    include ("SmnRegistersZP.asl")
    //-----------------------------------------------------------------
    // NBIO services
    //-----------------------------------------------------------------
    include ("NbioPcieZP.asl")
    include ("NbioZP.asl")
    include ("NbioDPTCiZP.asl")
    //-----------------------------------------------------------------
    // PCIe topology
    //-----------------------------------------------------------------
    include ("PcieTopologyZP.asl")

  /*----------------------------------------------------------------------------------------*/
  /**
   *  PTS event handler
   *
   *  This function should be called from PTS
   */
    Name (varBapmStatus, ON)
    Name (varSwNbPstateLoDis, 0)

    Method (APTS, 1) {
      if (LEqual (Arg0, 3)) {
        //
        //  Put PSPP to sleep
        //
        //procPsppSleep (Arg0)
        //
        // Put BAPM to sleep
        //
        //procBapmManage (OFF)
        //
        // Prepare Mem pstate
        //
        //Store (procMemePSManage (OFF), varSwNbPstateLoDis)
      }

    }
  /*----------------------------------------------------------------------------------------*/
  /**
   *  WAKE event handler
   *
   *  This function should be called from WAK
   */
    Method (AWAK, 1) {
      if (LEqual (Arg0, 3)) {
        //
        //  Wake PSPP
        //
        //procPsppWake (Arg0)
        //
        // Wake Mem PS
        //
        //if (LEqual (varSwNbPstateLoDis, 0)) {
        //  procMemePSManage (ON)
        //}
      }
    }

  /*----------------------------------------------------------------------------------------*/
  /**
   *  AC/DC change event handler
   *
   *
   */
    Method (procAcDcChangeEvent, 0) {
      //
      // Process AC/DC Change
      //
    }

  /*----------------------------------------------------------------------------------------*/
  /**
   *  PCIe speed change event handler
   *
   *  AC/DC state can be recovered from AcDc.
   *
   *  Arg0 - Target PCIe speed, Arg0 - Current link speed
   */
    Method (procPcieSpeedChangeEvent, 2) {

    }

  } //End of Scope(\_SB)

}   //End of DefinitionBlock


