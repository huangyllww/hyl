IRQLINK
	Name  = "LNKA"
	Reg  = 01h
	IrqList  = 4,5,7,10,11,14,15
	InterruptType = LevelLow
End

IRQLINK
	Name  = "LNKB"
	Reg  = 02h
	IrqList  = 4,5,7,10,11,14,15
	InterruptType = LevelLow
End

IRQLINK
	Name  = "LNKC"
	Reg  = 03h
	IrqList  = 4,5,7,10,11,14,15
	InterruptType = LevelLow
End

IRQLINK
	Name  = "LNKD"
	Reg  = 04h
	IrqList  = 4,5,7,10,11,14,15
	InterruptType = LevelLow
End

IRQLINK
	Name  = "LNKE"
	Reg  = 05h
	IrqList  = 4,5,7,10,11,14,15
	InterruptType = LevelLow
End

IRQLINK
	Name  = "LNKF"
	Reg  = 06h
	IrqList  = 4,5,7,10,11,14,15
	InterruptType = LevelLow
End

IRQLINK
	Name  = "LNKG"
	Reg  = 07h
	IrqList  = 4,5,7,10,11,14,15
	InterruptType = LevelLow
End

IRQLINK
	Name  = "LNKH"
	Reg  = 08h
	IrqList  = 4,5,7,10,11,14,15
	InterruptType = LevelLow
End

PCIDEVICE
	Title  = "SB Container - PciHost (Virtual)"
	Parent  = "PciHost (Virtual)"
	Attribute  = "0x0"
	Dev_type  = "Container"
	Dev  = 00h
	Fun  = 00h
	SleepNum  = 01h
   	ASLfile  = "'AmiChipsetModulePkg\ASL\HygonSb.asl;Before Pci Tree','AmiChipsetModulePkg\ASL\IrqLink.asl;After Pci Tree','AmiChipsetModulePkg\ASL\HygonImc.asl;Before Pci Tree','AmiChipsetModulePkg\ASL\OscApei.asl;Before Pci Tree'"
	DeviceType = OnBoard
	PCIBusSize = 32bit
	ROMMain = No
	Virtual = Yes
End

PCIDEVICE
	Title  = "SB Container - Root Complex Socket0 Die0"
	Parent  = "Root Complex Socket0 Die0"
	Attribute  = "0x0"
	Dev_type  = "Container"
	Dev  = 00h
	Fun  = 00h
	SleepNum  = 01h
	ASLfile  = "'AmiChipsetModulePkg\Asl\Hpet.asl'"
	DeviceType = OnBoard
	PCIBusSize = 32bit
	ROMMain = No
	Virtual = Yes
End

PCIDEVICE
	Title  = "SB SMBUS Controller"
	Parent  = "Root Complex Socket0 Die0"
	Attribute  = "0x0"
	Dev_type  = "PciDevice"
	Dev  = 014h
	Fun  = 00h
	SleepNum  = 01h
	DeviceType = OnBoard
	PCIBusSize = 32bit
	ROMMain = No
	InitRoutine  = "CspSbPciInitRoutine"	
End

PCIDEVICE
	Title  = "SB Container - ASL_PTS/ASL_WAK - PciHost (Virtual)"
	Parent  = "PciHost (Virtual)"
	Attribute  = "0x0"
	Dev_type  = "Container"
	Dev  = 00h
	Fun  = 00h
	SleepNum  = 01h
	DeviceType = OnBoard
	PCIBusSize = 32bit
	ROMMain = No
	Virtual = Yes
	ASL_PTS  = "Method;\SPTS(Arg0)"
	ASL_WAK  = "Method;ShiftLeft(Arg0, 4, DBG8) \SWAK(Arg0)"
End

PCIDEVICE
	Title  = "LpcBridge"
	Parent  = "Root Complex Socket0 Die0"
	Attribute  = "0x60003"
	Dev_type  = "LpcBridge"
	Dev  = 014h
	Fun  = 03h
	SleepNum  = 01h
	ASLfile  = "'AmiChipsetModulePkg\Asl\Pic.asl','AmiChipsetModulePkg\Asl\Dma.asl','AmiChipsetModulePkg\Asl\Timer.asl','AmiChipsetModulePkg\Asl\Rtc0.asl','AmiChipsetModulePkg\Asl\Speaker.asl','AmiChipsetModulePkg\Asl\Sb.asl','AmiChipsetModulePkg\ASL\Sb_RRIOrDMA.asl','AmiChipsetModulePkg\ASL\Sch_Uart.asl','AmiChipsetModulePkg\ASL\Soc_I2c.asl','AmiChipsetModulePkg\ASL\Sch_Gpio.asl'"
	ASLdeviceName  = "SBRG"
	DeviceType = OnBoard
	PCIBusSize = 32bit
	ROMMain = No
End

PCIDEVICE
	Title  = "Secure Digital (SD) Controller"
	Parent  = "Root Complex Socket0 Die0"
	Attribute  = "0x0"
	Dev_type  = "PciDevice"
	Dev  = 014h
	Fun  = 06h
	SleepNum  = 01h
	DeviceType = OnBoard
	PCIBusSize = 32bit
	ROMMain = No
	InitRoutine  = "SD_Init"	
End

IODEVICE
	Name  = "System SB IMC Controller"
	ASLfile  = "AmiChipsetModulePkg/Asl/SBIMC.ASL"
	ASLdeviceName  = "IMC"
	Token = "SB900_EC_SUPPORT" "=" "1"
End

IODEVICE
	Name  = "Kern CIR"
	ASLfile  = "AmiChipsetModulePkg/Asl/HygonCir.asl"
	ASLdeviceName  = "ECIR"
	Token = "SB900_EC_SUPPORT" "=" "1"
End

IOAPIC
	Title  = "IO APIC"
	APICID  = 080h
	VectorBase  = 00h
	VectorRange  = 018h
	AddressBase  = 0fec00000h
End

TOKEN
	Name  = "SB_SUPPORT"
	Value  = "1"
	Help  = "Main switch to enable Template - SouthBridge support in Project"
	TokenType = Boolean
	TargetEQU = Yes
	TargetMAK = Yes
	Master = Yes
End

TOKEN
	Name  = "CHIPSET_VENDOR"
	Value  = "1"
	Help  = "Chipset Vendor for OEM reference. 0 = Intel, 1 = HYGON, 2 = VIA.."
	TokenType = Integer
	TargetEQU = Yes
	TargetMAK = Yes
	TargetH = Yes
	Lock = Yes
End

TOKEN
	Name  = "CPVD"
	Value  = "$(CHIPSET_VENDOR)"
	Help  = "Chipset Vendor for OEM reference. 0 = Intel, 1 = HYGON, 2 = VIA.."
	TokenType = Integer
	TargetASL = Yes
	Lock = Yes
End

TOKEN
	Name  = "SB_PKG_NAME"
	Value  = "AmiChipsetModulePkg"
	Help  = "The package of this south bridge."
	TokenType = Expression
End

TOKEN
	Name  = "SB_TEMPLATE_VER"
	Value  = "0005"
	Help  = "South Bridge Template Version Number.\ DO NOT CHANGE THIS VALUE"
	TokenType = Integer
	TargetEQU = Yes
	TargetMAK = Yes
	TargetH = Yes
	Lock = Yes
End

TOKEN
	Name  = "DEBUG_PORT"
	Value  = "0x80"
	Help  = "Selects the port to which all checkpoints will be sent during BIOS POST."
	TokenType = Integer
	TargetEQU = Yes
End

TOKEN
	Name  = "SB_RESET_PPI_SUPPORT"
	Value  = "0"
	Help  = "Enable this token if reset PPI is from south bridge.\ If not disable this and provide reset functionality from other PEIM."
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
	Name  = "SB_STALL_PPI_SUPPORT"
	Value  = "1"
	Help  = "Enable this token if Stall PPI is from south bridge.\ If not disable this and provide reset functionality from other PEIM."
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
	Name  = "SMBUS_BASE_ADDRESS"
	Value  = "0x0B00"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "SMBUS_BASE_LENGTH"
	Value  = "16"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "SMBUS1_BASE_ADDRESS"
	Value  = "$(SMBUS_BASE_ADDRESS) +20h"
	Help  = "ASF SMBus I/O Registes Base Address"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "SMBUS1_BASE_LENGTH"
	Value  = "32"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "SMBB"
	Value  = "$(SMBUS1_BASE_ADDRESS)"
	Help  = "SMBus1 I/O Registes Base Address"
	TokenType = Integer
	TargetASL = Yes
End

TOKEN
	Name  = "SMBL"
	Value  = "$(SMBUS1_BASE_LENGTH)"
	Help  = "SMBus1 I/O Registes Range"
	TokenType = Integer
	TargetASL = Yes
End

TOKEN
	Name  = "DEBUG_COM_PORT_ADDR"
	Value  = "0x3f8"
	Help  = "COM Port address the debugger uses."
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "SMB0"
	Value  = "$(SMBUS_BASE_ADDRESS)"
	Help  = "SMBus0 I/O Registes Base Address"
	TokenType = Integer
	TargetASL = Yes
End

TOKEN
	Name  = "SMBM"
	Value  = "$(SMBUS_BASE_LENGTH)"
	Help  = "SMBus0 I/O Registes Range"
	TokenType = Integer
	TargetASL = Yes
End

TOKEN
	Name  = "SB_PIRQ_ROUTER_VID"
	Value  = "0x1002"
	Help  = "IRQ Router Vendor ID. \PLEASE CHANGE THIS AS PER CHIPSET"
	TokenType = Integer
	TargetEQU = Yes
	TargetH = Yes
End

TOKEN
	Name  = "SB_PIRQ_ROUTER_DID"
	Value  = "439Dh"
	Help  = "IRQ Router Device ID. \PLEASE CHANGE THIS AS PER CHIPSET"
	TokenType = Integer
	TargetEQU = Yes
	TargetH = Yes
End

TOKEN
	Name  = "PM_BASE_ADDRESS"
	Value  = "0x0800"
	TokenType = Integer
	TargetEQU = Yes
	TargetH = Yes
End

TOKEN
	Name  = "PM_BASE_LENGTH"
	Value  = "0xA0"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "PM2_BASE_ADDRESS"
	Value  = "0xFE00"
	Help  = "PM2 Base Address"
	TokenType = Integer
	TargetEQU = Yes
	TargetH = Yes
End

TOKEN
	Name  = "PBLK"
	Value  = "$(PM_BASE_ADDRESS) + 10h"
	Help  = "Boot-starp CPU Control Block register address. Use return value of PM_BASE_ADDRESS with proper offset.\Value can be returned by CPUx_PBLK tokens, x is the Processor index the PBLK is wired to.\Example : $(PM_BASE_ADDRESS) + 10h\"
	TokenType = Integer
	TargetEQU = Yes
	TargetH = Yes
	Lock = Yes
	Range  = "16-bit IO register"
End

TOKEN
	Name  = "PMBS"
	Value  = "$(PM_BASE_ADDRESS)"
	Help  = "ASL alias for ACPI I/O base address."
	TokenType = Integer
	TargetASL = Yes
	TargetH = Yes
End

TOKEN
	Name  = "PMLN"
	Value  = "$(PM_BASE_LENGTH)"
	Help  = "Power Management registers block length"
	TokenType = Integer
	TargetASL = Yes
End

TOKEN
	Name  = "SW_SMI_IO_ADDRESS"
	Value  = "0xB2"
	Help  = "PLEASE CHANGE THIS VALUE AS PER PM_BASE_ADDRESS"
	TokenType = Integer
	TargetEQU = Yes
	TargetH = Yes
End

TOKEN
	Name  = "SMIO"
	Value  = "$(SW_SMI_IO_ADDRESS)"
	Help  = "ASL alias for SW SMI port"
	TokenType = Integer
	TargetASL = Yes
End

TOKEN
	Name  = "GPBS"
	Value  = "0"
	Help  = "ASL alias for GPIO base Address"
	TokenType = Integer
	TargetASL = Yes
	TargetH = Yes
End

TOKEN
	Name  = "GPLN"
	Value  = "0"
	Help  = "GPIO Register Block length"
	TokenType = Integer
	TargetASL = Yes
	TargetH = Yes
End

TOKEN
	Name  = "IDE_BASE_ADDRESS"
	Value  = "0x0FF00"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "APCB"
	Value  = "0x0FEC00000"
	Help  = "Default I/O APIC(s) memory start address, bytes\0x0FEC00000 - default, 0 - I/O APIC's disabled"
	TokenType = Integer
	TargetASL = Yes
	TargetH = Yes
End

TOKEN
	Name  = "APCL"
	Value  = "0x1000"
	Help  = "I/O APIC(s) memory decoded range, bytes\0x1000 - default,\0 - I/O APIC's not decoded "
	TokenType = Integer
	TargetASL = Yes
	TargetH = Yes
End

TOKEN
	Name  = "ACPI_SCI_INT"
	Value  = "9"
	Help  = "SCI Interrupt number"
	TokenType = Integer
	TargetH = Yes
	Range  = "3-15"
End

TOKEN
	Name  = "ACPI_ALARM_DAY_CMOS"
	Value  = "0Dh"
	Help  = "RTC Index of the Day-of-Month alarm"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 - 0xff 0 = not supported"
End

TOKEN
	Name  = "ACPI_ALARM_MONTH_CMOS"
	Value  = "0h"
	Help  = "RTC Index of the Month-of-year alarm\"
	TokenType = Integer
	TargetH = Yes
	Range  = "0-0xff 0 = not supported"
End

TOKEN
	Name  = "ACPI_CENTURY_CMOS"
	Value  = "032h"
	Help  = "RTC Index of the Century-of-Data\"
	TokenType = Integer
	TargetH = Yes
	Range  = "0-0xff 0 = not supported"
End

TOKEN
	Name  = "ACPI_RESET_REG_ADDRESS"
	Value  = "0CF9h"
	Help  = "Reset Register Address (Part of GAS Structure refer, to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 = not Supported other values depends on other GAS elements"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "ACPI_RESET_REG_ADDRESS"
	Value  = "$(SW_SMI_IO_ADDRESS)"
	Help  = "Reset Register Address (Part of GAS Structure refer, to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 = not Supported other values depends on other GAS elements"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
	Token = "OS_RESET_WORKAROUND" "=" "1"
End

TOKEN
	Name  = "ACPI_RESET_REG_TYPE"
	Value  = "1"
	Help  = "Reset Register Id (Part of GAS Structure, refer to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "0=System memory; 1=System I/O; 2=PCI Config Space; 3=Embeded Controller; 4=SMBus; 0x7F=Functional Fixed Hardware; All other values reserved"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "ACPI_RESET_REG_BITWIDTH"
	Value  = "8"
	Help  = "Reset Register Bit Width (Part of GAS Structure, refer to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "value range depends on other GAS elements"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "ACPI_RESET_REG_BITOFFSET"
	Value  = "0"
	Help  = "Reset Register Bit Offset (Part of GAS Structure, refer to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "value range depends on other GAS elements"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "ACPI_RESET_REG_VALUE"
	Value  = "6"
	Help  = "Value to write to the Reset Register to initiate System Reset"
	TokenType = Integer
	TargetH = Yes
	Range  = "? - chipset specific"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "ACPI_RESET_REG_VALUE"
	Value  = "0xbe"
	Help  = "Value to write to the Reset Register to initiate System Reset"
	TokenType = Integer
	TargetH = Yes
	Range  = "? - chipset specific"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
	Token = "OS_RESET_WORKAROUND" "=" "1"
End

TOKEN
	Name  = "PM1A_EVT_BLK_ADDRESS"
	Value  = "$(PM_BASE_ADDRESS)"
	Help  = "PM1a_EVT BLK Base Address (Part of GAS Structure refer, to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetEQU = Yes
	TargetH = Yes
	Range  = "0 = not Supported other values depends on other GAS elements"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "PM1A_EVT_BLK_TYPE"
	Value  = "1"
	Help  = "PM1a_EVT BLK Registes Id (Part of GAS Structure, refer to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "0=System memory; 1=System I/O; 2=PCI Config Space; 3=Embeded Controller; 4=SMBus; 0x7F=Functional Fixed Hardware; All other values reserved"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "PM1A_EVT_BLK_BITWIDTH"
	Value  = "32"
	Help  = "PM1a_EVT BLK Registes Bit Width (Part of GAS Structure, refer to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "value range depends on other GAS elements"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "PM1A_EVT_BLK_BITOFFSET"
	Value  = "0"
	Help  = "PM1a_EVT BLK Registes Bit Offset (Part of GAS Structure, refer to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "value range depends on other GAS elements"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "PM1_EVT_LENGTH"
	Value  = "4"
	Help  = "PM1a_EVT BLK length in bytes"
	TokenType = Integer
	TargetH = Yes
	Range  = "value range depends on other GAS elements"
End

TOKEN
	Name  = "PM1A_CNT_BLK_ADDRESS"
	Value  = "$(PM_BASE_ADDRESS)+0x04"
	Help  = "PM1a_CNT BLK Base Address (Part of GAS Structure refer, to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetEQU = Yes
	TargetH = Yes
	Range  = "0 = not Supported other values depends on other GAS elements"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "PM1A_CNT_BLK_TYPE"
	Value  = "1"
	Help  = "PM1a_CNT BLK Registes Id (Part of GAS Structure, refer to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "0=System memory; 1=System I/O; 2=PCI Config Space; 3=Embeded Controller; 4=SMBus; 0x7F=Functional Fixed Hardware; All other values reserved"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "PM1A_CNT_BLK_BITWIDTH"
	Value  = "16"
	Help  = "PM1a_CNT BLK Registes Bit Width (Part of GAS Structure, refer to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "value range depends on other GAS elements"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "PM1A_CNT_BLK_BITOFFSET"
	Value  = "0"
	Help  = "PM1a_CNTT BLK Registes Bit Offset (Part of GAS Structure, refer to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "value range depends on other GAS elements"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "PM1_CNT_LENGTH"
	Value  = "2"
	Help  = "PM1a_CNT BLK length in bytes"
	TokenType = Integer
	TargetH = Yes
	Range  = "value range depends on other GAS elements"
End

TOKEN
	Name  = "PM1B_EVT_BLK_ADDRESS"
	Value  = "0"
	Help  = "PM1b_EVT BLK Base Address (Part of GAS Structure refer, to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 = not Supported other values depends on other GAS elements"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "PM1B_EVT_BLK_TYPE"
	Value  = "1"
	Help  = "PM1b_EVT BLK Registes Id (Part of GAS Structure, refer to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "0=System memory; 1=System I/O; 2=PCI Config Space; 3=Embeded Controller; 4=SMBus; 0x7F=Functional Fixed Hardware; All other values reserved"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "PM1B_EVT_BLK_BITWIDTH"
	Value  = "0"
	Help  = "PM1a_EVT BLK Registes Bit Width (Part of GAS Structure, refer to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "value range depends on other GAS elements"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "PM1B_EVT_BLK_BITOFFSET"
	Value  = "0"
	Help  = "PM1a_EVT BLK Registes Bit Offset (Part of GAS Structure, refer to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "value range depends on other GAS elements"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "PM1B_CNT_BLK_ADDRESS"
	Value  = "0"
	Help  = "PM1b_CNT BLK Base Address (Part of GAS Structure refer, to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 = not Supported other values depends on other GAS elements"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "PM1B_CNT_BLK_TYPE"
	Value  = "1"
	Help  = "PM1a_CNT BLK Registes Id (Part of GAS Structure, refer to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "0=System memory; 1=System I/O; 2=PCI Config Space; 3=Embeded Controller; 4=SMBus; 0x7F=Functional Fixed Hardware; All other values reserved"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "PM1B_CNT_BLK_BITWIDTH"
	Value  = "0"
	Help  = "PM1a_CNT BLK Registes Bit Width (Part of GAS Structure, refer to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "value range depends on other GAS elements"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "PM1B_CNT_BLK_BITOFFSET"
	Value  = "0"
	Help  = "PM1a_CNTT BLK Registes Bit Offset (Part of GAS Structure, refer to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "value range depends on other GAS elements"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "PM2_CNT_BLK_ADDRESS"
	Value  = "0"
	Help  = "PM2_CNT BLK Base Address (Part of GAS Structure refer, to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 = not Supported other values depends on other GAS elements"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "PM2_CNT_BLK_TYPE"
	Value  = "1"
	Help  = "PM2_CNT BLK Registes Id (Part of GAS Structure, refer to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "0=System memory; 1=System I/O; 2=PCI Config Space; 3=Embeded Controller; 4=SMBus; 0x7F=Functional Fixed Hardware; All other values reserved"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "PM2_CNT_BLK_BITWIDTH"
	Value  = "8"
	Help  = "PM2_CNT BLK Registes Bit Width (Part of GAS Structure, refer to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "value range depends on other GAS elements"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "PM2_CNT_BLK_BITOFFSET"
	Value  = "0"
	Help  = "PM2_CNT BLK Registes Bit Offset (Part of GAS Structure, refer to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "value range depends on other GAS elements"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "PM2_CNT_LENGTH"
	Value  = "0"
	Help  = "PM2_CNT BLK length in bytes"
	TokenType = Integer
	TargetH = Yes
	Range  = "value range depends on other GAS elements"
End

TOKEN
	Name  = "PM_TMR_BLK_ADDRESS"
	Value  = "$(PM_BASE_ADDRESS)+0x08"
	Help  = "PM_TMR BLK Base Address (Part of GAS Structure refer, to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetEQU = Yes
	TargetH = Yes
	Range  = "0 = not Supported other values depends on other GAS elements"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "PM_TMR_BLK_TYPE"
	Value  = "1"
	Help  = "PM_TMR BLK Registes Id (Part of GAS Structure, refer to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "0=System memory; 1=System I/O; 2=PCI Config Space; 3=Embeded Controller; 4=SMBus; 0x7F=Functional Fixed Hardware; All other values reserved"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "PM_TMR_BLK_BITWIDTH"
	Value  = "32"
	Help  = "PM_TMR BLK Registes Bit Width (Part of GAS Structure, refer to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "value range depends on other GAS elements"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "PM_TMR_BLK_BITOFFSET"
	Value  = "0"
	Help  = "PM_TMR BLK Registes Bit Offset (Part of GAS Structure, refer to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "value range depends on other GAS elements"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "PM_TMR_LENGTH"
	Value  = "4"
	Help  = "PM_TMR BLK length in bytes"
	TokenType = Integer
	TargetH = Yes
	Range  = "value range depends on other GAS elements"
End

TOKEN
	Name  = "GPE0_BLK_ADDRESS"
	Value  = "$(PM_BASE_ADDRESS)+0x20"
	Help  = "GPE0 BLK Base Address (Part of GAS Structure refer, to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetEQU = Yes
	TargetH = Yes
	Range  = "0 = not Supported other values depends on other GAS elements"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "GPE0_BLK_TYPE"
	Value  = "1"
	Help  = "GPE0 BLK Registes Id (Part of GAS Structure, refer to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "0=System memory; 1=System I/O; 2=PCI Config Space; 3=Embeded Controller; 4=SMBus; 0x7F=Functional Fixed Hardware; All other values reserved"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "GPE0_BLK_BITWIDTH"
	Value  = "64"
	Help  = "GPE0 BLK Registes Bit Width (Part of GAS Structure, refer to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "value range depends on other GAS elements"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "GPE0_BLK_BITOFFSET"
	Value  = "0"
	Help  = "GPE0 BLK Registes Bit Offset (Part of GAS Structure, refer to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "value range depends on other GAS elements"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "GPE0_BLK_LENGTH"
	Value  = "8"
	Help  = "GPE0 BLK length in bytes"
	TokenType = Integer
	TargetH = Yes
	Range  = "value range depends on other GAS elements"
End

TOKEN
	Name  = "GPE1_BLK_ADDRESS"
	Value  = "0"
	Help  = "GPE1 BLK Base Address (Part of GAS Structure refer, to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 = not Supported other values depends on other GAS elements"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "GPE1_BLK_TYPE"
	Value  = "1"
	Help  = "GPE1 BLK Registes Id (Part of GAS Structure, refer to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "0=System memory; 1=System I/O; 2=PCI Config Space; 3=Embeded Controller; 4=SMBus; 0x7F=Functional Fixed Hardware; All other values reserved"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "GPE1_BLK_BITWIDTH"
	Value  = "0"
	Help  = "GPE1 BLK Registes Bit Width (Part of GAS Structure, refer to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "value range depends on other GAS elements"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "GPE1_BLK_BITOFFSET"
	Value  = "0"
	Help  = "GPE1 BLK Registes Bit Offset (Part of GAS Structure, refer to ACPI v2.0 spec for details)"
	TokenType = Integer
	TargetH = Yes
	Range  = "value range depends on other GAS elements"
	Token = "ACPI_BUILD_TABLES_2_0" "=" "1"
End

TOKEN
	Name  = "GPE1_BLK_LENGTH"
	Value  = "0"
	Help  = "GPE1 BLK length in bytes"
	TokenType = Integer
	TargetH = Yes
	Range  = "value range depends on other GAS elements"
End

TOKEN
	Name  = "GPE1_BASE_OFFSET"
	Value  = "0x0"
	Help  = "GPE1 Base offset within the ACPI general purpose event model (FADT byte 94)"
	TokenType = Integer
	TargetH = Yes
	Range  = "0-0xff"
End

TOKEN
	Name  = "PRIMARY_CHANNEL_ENABLE"
	Value  = "1"
	Help  = "Enable/Disable Primary Channel"
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
	Name  = "PRIMARY_MASTER_DRIVE_ENABLE"
	Value  = "1"
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
	Name  = "MAX_UDMA"
	Value  = "6"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "PRIMARY_SLAVE_DRIVE_ENABLE"
	Value  = "1"
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
	Name  = "SECONDARY_CHANNEL_ENABLE"
	Value  = "1"
	Help  = "Enable/Disable Secondary Channel"
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
	Name  = "SECONDARY_MASTER_DRIVE_ENABLE"
	Value  = "1"
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
	Name  = "SECONDARY_SLAVE_DRIVE_ENABLE"
	Value  = "1"
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
	Name  = "BUSMASTER_ENABLE"
	Value  = "1"
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
	Name  = "MASTER_INTERRUPT_BASE"
	Value  = "0x58"
	Help  = "This value set the Interrupt Vector base for the master. Hardware IRQ0 = this base.\In legacy real mode this value is 8. It can not be 8 in protected mode.\This value must be a multiple of 8, and the this value must be different than SLAVE_INTERRUPT_BASE."
	TokenType = Integer
	TargetH = Yes
	Range  = "0-F8"
End

TOKEN
	Name  = "SLAVE_INTERRUPT_BASE"
	Value  = "0x70"
	Help  = "This value set the Interrupt Vector base for the slave. Hardware IRQ8 = this base.\In legacy real mode this value is 0x70.\This value must be a multiple of 8, and the this value must be different than MASTER_INTERRUPT_BASE."
	TokenType = Integer
	TargetH = Yes
	Range  = "0-F8"
End

TOKEN
	Name  = "PRIMARY_IDE_GPI"
	Value  = "5"
	Help  = "South Bridge GPI for primary IDE channel cable detection"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "A_S0_PKG"
	Value  = "0x0,0x0,0,0"
	Help  = "Intel ICH(x) example. Modify for a new Chipset"
	TokenType = Expression
	TargetMAK = Yes
	Range  = "4 decimal or Hex (use '0x' prefix) values sepparated with ','"
End

TOKEN
	Name  = "A_S1_PKG"
	Value  = "0x1,0x0,0,0"
	Help  = "Intel ICH(x) example. Modify for a new Chipset"
	TokenType = Expression
	TargetMAK = Yes
	Range  = "4 decimal or Hex (use '0x' prefix) values separated with ','"
End

TOKEN
	Name  = "A_S2_PKG"
	Value  = "0x2,0x0,0,0"
	TokenType = Expression
	TargetMAK = Yes
	Range  = "4 decimal or Hex (use '0x' prefix) values separated with ','"
End

TOKEN
	Name  = "A_S3_PKG"
	Value  = "0x3,0x0,0,0"
	Help  = "Intel ICH(x) example. Modify for a new Chipset"
	TokenType = Expression
	TargetMAK = Yes
	Range  = "4 decimal or Hex (use '0x' prefix) values separated with ','"
End

TOKEN
	Name  = "A_S4_PKG"
	Value  = "0x4,0x0,0,0"
	Help  = "Intel ICH(x) example. Modify for a new Chipset"
	TokenType = Expression
	TargetMAK = Yes
	Range  = "4 decimal or Hex (use '0x' prefix) values separated with ','"
End

TOKEN
	Name  = "A_S5_PKG"
	Value  = "0x5,0x0,0,0"
	Help  = "Intel ICH(x) example. Modify for a new Chipset"
	TokenType = Expression
	TargetMAK = Yes
	Range  = "4 decimal or Hex (use '0x' prefix) values separated with ','"
End

TOKEN
	Name  = "INCLUDE_SB_ASM_FILE_IN_SEC"
	Value  = "1"
	Help  = "Includes an ASM file and an eLink in SEC build process for SB code modification:"
	TokenType = Boolean
End

TOKEN
	Name  = "SPI_BASE_ADDRESS"
	Value  = "0xFEC10000"
	TokenType = Integer
	TargetH = Yes
	Token = "SPIFlash_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SPIB"
	Value  = "0"
	Help  = "Same as SPI_BASE_ADDRESS for ASL use "
	TokenType = Integer
	TargetASL = Yes
End

TOKEN
	Name  = "SPIL"
	Value  = "0"
	Help  = "Same as SPI_BASE_ADDRESS for ASL use "
	TokenType = Integer
	TargetASL = Yes
End

TOKEN
	Name  = "SPIB"
	Value  = "$(SPI_BASE_ADDRESS)"
	Help  = "Same as SPI_BASE_ADDRESS for ASL use "
	TokenType = Integer
	TargetASL = Yes
	Token = "SPIFlash_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SPIL"
	Value  = "0x1000"
	Help  = "Same as SPI_BASE_ADDRESS for ASL use "
	TokenType = Integer
	TargetASL = Yes
	Token = "SPIFlash_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SPI_STS"
	Value  = "0x0"
	Help  = "SPI Status Register"
	TokenType = Integer
	TargetH = Yes
	Token = "SPIFlash_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SPI_CTL"
	Value  = "0x02"
	Help  = "SPI Control Register"
	TokenType = Integer
	TargetH = Yes
	Token = "SPIFlash_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SPI_ADR"
	Value  = "0x04"
	Help  = "SPI Address Register"
	TokenType = Integer
	TargetH = Yes
	Token = "SPIFlash_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SPI_DAT0"
	Value  = "0x08"
	Help  = "SPI Data 0 Register"
	TokenType = Integer
	TargetH = Yes
	Token = "SPIFlash_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SPI_BIOS_BAR"
	Value  = "0x50"
	Help  = "BIOS Base Address Register"
	TokenType = Integer
	TargetH = Yes
	Token = "SPIFlash_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SPI_PREOP"
	Value  = "0x54"
	Help  = "Prefix Opcode Configuration register"
	TokenType = Integer
	TargetH = Yes
	Token = "SPIFlash_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SPI_OPTYPE"
	Value  = "0x56"
	Help  = "Opcode Type Configuration Register"
	TokenType = Integer
	TargetH = Yes
	Token = "SPIFlash_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SPI_OPMENU"
	Value  = "0x58"
	Help  = "Opcode Menu Configuration Register"
	TokenType = Integer
	TargetH = Yes
	Token = "SPIFlash_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SPI_OPCODE_WRITE_INDEX "
	Value  = "0"
	Help  = "Write Opcode Menu slot command reference"
	TokenType = Integer
	TargetH = Yes
	Token = "SPIFlash_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SPI_OPCODE_READ_INDEX"
	Value  = "1"
	Help  = "Read Opcode menu slot reference"
	TokenType = Integer
	TargetH = Yes
	Token = "SPIFlash_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SPI_OPCODE_ERASE_INDEX"
	Value  = "2"
	Help  = "Erase Opcode menu slot reference"
	TokenType = Integer
	TargetH = Yes
	Token = "SPIFlash_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SPI_OPCODE_READ_S_INDEX"
	Value  = "3"
	Help  = "Read Status Opcode Menu Slot reference"
	TokenType = Integer
	TargetH = Yes
	Token = "SPIFlash_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SPI_OPCODE_READ_ID_INDEX"
	Value  = "4"
	Help  = "Read identification opcode menu slot reference"
	TokenType = Integer
	TargetH = Yes
	Token = "SPIFlash_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SPI_OPCODE_WRITE_S_INDEX"
	Value  = "5"
	Help  = "Write Status opcode menu slot reference"
	TokenType = Integer
	TargetH = Yes
	Token = "SPIFlash_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SPI_OPCODE_WRITE_E_INDEX"
	Value  = "6"
	Help  = "Write Enable opcode menu slot reference"
	TokenType = Integer
	TargetH = Yes
	Token = "SPIFlash_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SPI_OPCODE_WRITE_S_E_INDEX"
	Value  = "7"
	Help  = "Write Status enable opcode menu slot reference"
	TokenType = Integer
	TargetH = Yes
	Token = "SPIFlash_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SPI_OPCODE_TYPE_READ_NO_ADDRESS"
	Value  = "0"
	Help  = "Opcode type that indicates that the command is a read command that doesn't need an Address sent with it"
	TokenType = Integer
	TargetH = Yes
	Token = "SPIFlash_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SPI_OPCODE_TYPE_WRITE_NO_ADDRESS"
	Value  = "1"
	Help  = "Opcode type that indicates that the command is a write command that doesn't need an Address sent with it"
	TokenType = Integer
	TargetH = Yes
	Token = "SPIFlash_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SPI_OPCODE_TYPE_READ_WITH_ADDRESS"
	Value  = "2"
	Help  = "Opcode type that indicates that the command is a read command that needs an Address sent with it"
	TokenType = Integer
	TargetH = Yes
	Token = "SPIFlash_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SPI_OPCODE_TYPE_WRITE_WITH_ADDRESS"
	Value  = "3"
	Help  = "Opcode type that indicates that the command is a write command that needs an Address sent with it"
	TokenType = Integer
	TargetH = Yes
	Token = "SPIFlash_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SPI_MAX_TRANSFER"
	Value  = "64"
	TokenType = Integer
	TargetH = Yes
	Token = "SPIFlash_SUPPORT" "=" "1"
End

TOKEN
	Name  = "HPET_SUPPORT"
    Value  = "1"
	Help  = "Enables High Performance Event Timer (HPET) Support in Project"
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
	Name  = "HPET_BASE_ADDRESS"
	Value  = "0xFED00000"
	Help  = "HPET Block Registers"
	TokenType = Integer
	TargetEQU = Yes
	TargetH = Yes
	Lock = Yes
	Range  = "0xFED00000 or 0xFED01000 or 0xFED02000 or 0xFED03000"
	Token = "HPET_SUPPORT" "=" "1"
End

TOKEN
	Name  = "HPTB"
	Value  = "$(HPET_BASE_ADDRESS)"
	Help  = "Same as HPET_BASE_ADDRESS for ASL use "
	TokenType = Integer
	TargetASL = Yes
	Token = "HPET_SUPPORT" "=" "1"
End

TOKEN
	Name  = "HPTL"
	Value  = "0x400"
	Help  = "Same as HPET_BASE_ADDRESS for ASL use "
	TokenType = Integer
	TargetASL = Yes
	Token = "HPET_SUPPORT" "=" "1"
End

TOKEN
	Name  = "WDT_SUPPORT"
    Value  = "1"
	Help  = "Enables Watchdog Timer (WDT) Support in Project"
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
        Name  = "WDTB"
        Value  = "0"
        Help  = "Same as WDT_BASE_ADDRESS for ASL use "
        TokenType = Integer
        TargetASL = Yes
        Token = "WDT_SUPPORT" "=" "0"
End

TOKEN
        Name  = "WDTL"
        Value  = "0"
        Help  = "Same as WDT_BASE_ADDRESS for ASL use "
        TokenType = Integer
        TargetASL = Yes
        Token = "WDT_SUPPORT" "=" "0"
End

TOKEN
        Name  = "WDTB"
        Value  = "0xFEB00000"
        Help  = "Same as WDT_BASE_ADDRESS for ASL use "
        TokenType = Integer
        TargetASL = Yes
        Token = "WDT_SUPPORT" "=" "1"
End

TOKEN
        Name  = "WDTL"
        Value  = "0x1000"
        Help  = "Same as WDT_BASE_ADDRESS for ASL use "
        TokenType = Integer
        TargetASL = Yes
        Token = "WDT_SUPPORT" "=" "1"
End


TOKEN
	Name  = "WDT_BASE_ADDRESS"
	Value  = "0xFEB00000"
	Help  = "WDT Block Registers"
	TokenType = Integer
	TargetEQU = Yes
	TargetH = Yes
	Lock = Yes
	Token = "WDT_SUPPORT" "=" "1"
End

TOKEN
	Name  = "WDT_BASE_LENGTH"
	Value  = "0x1000"
	Help  = "WDT Block length"
	TokenType = Integer
	TargetEQU = Yes
	TargetH = Yes
	Token = "WDT_SUPPORT" "=" "1"
End

TOKEN
	Name  = "PCI_EHCI_BUS_NUMBER"
	Value  = "0x0"
	Help  = "EHCI controller bus number"
	TokenType = Integer
	TargetH = Yes
	Token = "USB_DEBUG_TRANSPORT" "=" "1"
End

TOKEN
	Name  = "PCI_EHCI_DEV_FUNC_NUMBER"
	Value  = "0x90"
	Help  = "for USB DEBUGGER. \EHCI controller device and function number. \Bit 0-2 represents function number and\ Bit 3-7 represents device number \ For Kern No.1 EHCI = 0x90, No.2 EHCI = 0x98, No.3 EHCI = 0xB0"
	TokenType = Integer
	TargetH = Yes
	Token = "USB_DEBUG_TRANSPORT" "=" "1"
End

TOKEN
	Name  = "PCI_EHCI_BAR_OFFSET"
	Value  = "0x10"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "EHCI_DEBUG_PORT_SELECT"
	Value  = "2"
	Help  = "for USB DEBUGGER. \EHCI Hub port select if Debug port(Port1) route\to port 0 Hub. \We can select one Hub port as debug port. \ 0: Disable \ 1: Port1 \ 2: Port2 \ 3: Port3 \ 4: Port4"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "EHCI_MMIO_BASE_ADDRESS"
	Value  = "$(PCIEX_BASE_ADDRESS) + $(PCIEX_LENGTH) + 0xFFFC00"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "EHCI_MMIO_SIZE"
	Value  = "0x400"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "SB_PCI_DEVICES_SSID_TABLE"
	Value  = "{SATA_BUS_DEV_FUN, -1}, {SMBUS_BUS_DEV_FUN, -1}, {USB1_EHCI_BUS_DEV_FUN, -1},{LPC_BUS_DEV_FUN, -1}, {USB_XHCI_BUS_DEV_FUN, -1}, {SD_BUS_DEV_FUN, -1}, {-1, -1}"
	Help  = "List of PCI device's Sub-System ID in the following format:\{Device#1 Bus/Device/Function, Device#1 Sub-ID}, {Device#2 Bus/Device/Function, Device#2 Sub-ID}...\The format of the PCI bus/device/function is followed by EFI_PCI_CONFIGURATION_ADDRESS.\If the value of Sub-ID is -1, that means BIOS will use PCI Vendor-ID and Device-ID instead.\The last structure {-1, -1} is end of the table, don't remove it!"
	TokenType = Expression
	TargetH = Yes
End

TOKEN
	Name  = "SMM_SB800_TIMER_SUPPORT"
	Value  = "1"
	Help  = "Enable/Disable SB800 Timer SMI"
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
	Name  = "SW_SMI_ACTIVATE_TIMER_SMI_S3"
	Value  = "0xA2"
	Help  = "for re-activate Timer SMI while S3 resume"
	TokenType = Integer
	TargetH = Yes
	Token = "SMM_SB800_TIMER_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SHOW_IDE_MODE_SETUP"
	Value  = "0"
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
	Name  = "SB_OEM_4080PIN_CABLE_STATUS"
	Value  = "0"
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
	Name  = "SB_HPET_OEM_ID"
	Value  = "T_ACPI_OEM_ID"
	Help  = "ACPI OEM Id -\a string value to be filled into ACPI table headers"
	TokenType = Expression
	TargetMAK = Yes
	TargetH = Yes
	Range  = "1-8 characters"
	Token = "HPET_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SB_HPET_OEM_TBL_ID"
	Value  = "T_ACPI_OEM_TBL_ID"
	Help  = "ACPI OEM Id -\a string value to be filled into ACPI table headers"
	TokenType = Expression
	TargetMAK = Yes
	TargetH = Yes
	Range  = "1-6 characters"
	Token = "HPET_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SB_WDRT_OEM_ID"
	Value  = "T_ACPI_OEM_ID"
	Help  = "ACPI OEM Id -\a string value to be filled into ACPI table headers"
	TokenType = Expression
	TargetMAK = Yes
	TargetH = Yes
	Range  = "1-8 characters"
End

TOKEN
	Name  = "SB_WDRT_OEM_TBL_ID"
	Value  = "T_ACPI_OEM_TBL_ID"
	Help  = "ACPI OEM Id -\a string value to be filled into ACPI table headers"
	TokenType = Expression
	TargetMAK = Yes
	TargetH = Yes
	Range  = "1-6 characters"
End

TOKEN
	Name  = "HDD_POWER_LOSS_IN_S3"
	Value  = "1"
	Help  = "HDD security S3 resume"
	TokenType = Boolean
	TargetH = Yes
	Token = "SECURITY_SUPPORT" "=" "1"
End

TOKEN
	Name  = "DEVICE_NAME_LENGTH"
	Value  = "14"
	Help  = "ATA/ATAPI Device name length, this token is defined the maximum characters of the device name will be showed on SETUP."
	TokenType = Integer
	TargetH = Yes
	Range  = "2-41"
End

TOKEN
	Name  = "ACOUSTIC_LEVEL"
	Value  = "0xFF"
	Help  = "0xFF - Set to Recommended value by the Vendor\0xFE - Maximum Performance\0x01 - Minimum power Consumption with Standby\0x80- - Minimum power Consumption without  Standby\0x81 -0xFD Intermediate Power Management levels without Standby\0x02 -0x7F Intermediate Power Management levels with Standby"
	TokenType = Integer
	TargetH = Yes
	Range  = "01h-FFh"
	Token = "INTEL_IDE_PROTOCOL" "=" "1"
	Token = "ACOUSTIC_MANAGEMENT_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SB_ENHANCE_BOOT_FAIL_TIMER"
	Value  = "0"
	Help  = "for old version Ide bus driver"
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
	Name  = "SB_LPC_PORT80_SUPPORT"
	Value  = "1"
	Help  = "LPC Port 80 support"
	TokenType = Boolean
	TargetEQU = Yes
	TargetH = Yes
End

TOKEN
	Name  = "SB_PCI_PORT80_SUPPORT"
	Value  = "0"
	Help  = "PCI Port 80 support in SB SEC stage"
	TokenType = Boolean
	TargetEQU = Yes
End

TOKEN
	Name  = "SB_PCI_PORT80_SUPPORT"
	Value  = "1"
	Help  = "PCI Port 80 support in SB SEC stage"
	TokenType = Boolean
	TargetEQU = Yes
	Token = "AMI_DEBUGGER_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SB_POWER_SAVING_SUPPORT"
	Value  = "0"
	Help  = "For HYGON Performance and Power Optimization"
	TokenType = Boolean
	TargetEQU = Yes
	TargetH = Yes
End

TOKEN
	Name  = "DEFAULT_YEAR"
	Value  = "2019"
	Help  = "Year, that will be set in RTC in case of date corruption"
	TokenType = Integer
	TargetH = Yes
	Range  = "1998-2099"
End

TOKEN
	Name  = "DEFAULT_MONTH"
	Value  = "1"
	Help  = "Month, that will be set in RTC in case of date corruption"
	TokenType = Integer
	TargetH = Yes
	Range  = "1-12"
End

TOKEN
	Name  = "DEFAULT_DAY"
	Value  = "1"
	Help  = "Day, that will be set in RTC in case of date corruption"
	TokenType = Integer
	TargetH = Yes
	Range  = "1-31"
End

TOKEN
	Name  = "EARLIEST_YEAR"
	Value  = "2005"
	Help  = "If year, stored in RTC is less than this value, date will be considered as incorrect"
	TokenType = Integer
	TargetH = Yes
	Range  = "2005"
End

TOKEN
    Name  = "LATEST_YEAR"
    Value  = "2099"
    Help  = "If year, stored in RTC is more than this value, date will be considered as incorrect"
    TokenType = Integer
    TargetH = Yes
    Range  = "2099"
End

TOKEN
	Name  = "CTRL_HOME_CHECK_LOOP"
	Value  = "15"
	Help  = "Loop count for Ctrl + Home Key Scan."
	TokenType = Integer
	TargetMAK = Yes
	TargetH = Yes
End

TOKEN
	Name  = " "
	Value  = "0"
	TokenType = Integer
End

TOKEN
	Name  = "--------- Token definition for HYGON FCH firmware ---------"
	Value  = "---------------------------------------------------------"
	TokenType = Expression
End

TOKEN
	Name  = "FCH_FIRMWARE_NCB_SUPPORT"
	Value  = "1"
	Help  = "Main switch to enable integrated EC support in Project"
	TokenType = Boolean
	TargetEQU = Yes
	TargetMAK = Yes
End

TOKEN
	Name  = "ROMSIG_SUPPORT"
	Value  = "$(FCH_FIRMWARE_NCB_SUPPORT)"
	Help  = "This token is backward compatible !!! Please use FCH_FIRMWARE_NCB_SUPPORT !!!"
	TokenType = Boolean
	TargetEQU = Yes
	TargetMAK = Yes
End


######
### <AAV> use following new token to replace original flash-layout token.
######
### <AAV> for Discovery ###
TOKEN
	Name  = "FCH_FIRMWARE_OFFSET"
	Value  = "0x20000"
	Help  = "Offset to the start of the HYGON firmware area from the start of the ROM image"
	TokenType = Integer
	TargetEQU = Yes
	TargetMAK = Yes
	TargetH = Yes
	Lock = Yes
End

TOKEN
	Name  = "FCH_FIRMWARE_SIZE"
	Value  = "$(XHCI_FIRWARE_SIZE)+$(ROMSIG_SIZE)"
	Help  = "The firmware size of whole HYGON firmware. (ROMSIG, XHCI , IMC , GEC, Etc....)\Default is 64K"
	TokenType = Integer
	TargetEQU = Yes
	TargetMAK = Yes
	TargetH = Yes
	Lock = Yes
End

TOKEN
	Name  = "FCH_FIRMWARE_BASE"
	Value  = "0xFFFFFFFF - $(FLASH_SIZE) + $(FCH_FIRMWARE_OFFSET) + 1"
	Help  = "Fixed address of the HYGON firmware area"
	TokenType = Integer
	TargetEQU = Yes
	TargetMAK = Yes
	TargetH = Yes
	Lock = Yes
End

TOKEN
	Name  = "ROMSIG_SIZE"
	Value  = "0x1000"
	Help  = "16 bytes ROMSIG size.\ !!! must to use hexadecimal expression in Address for INSERT.exe. !!!"
	TokenType = Integer
	TargetEQU = Yes
	TargetMAK = Yes
	TargetH = Yes
	Lock = Yes
End

TOKEN
	Name  = "ROMSIG_BASE"
	Value  = "0xFFFFFFFF-$(FLASH_SIZE)+$(FCH_FIRMWARE_OFFSET)+1"
	Help  = "Fixed address of the HYGON ROM SIG"
	TokenType = Integer
	TargetEQU = Yes
	TargetMAK = Yes
	TargetH = Yes
	Lock = Yes
	Token = "AmiPspPkg_SUPPORT" "=" "0"
End

TOKEN
	Name  = "ROMSIG_OFFSET"
	Value  = "$(FCH_FIRMWARE_OFFSET)"
	Help  = "Offset to the start of the HYGON firmware area from the start of the ROM image"
	TokenType = Integer
	TargetEQU = Yes
	TargetMAK = Yes
	TargetH = Yes
	Lock = Yes
	Token = "AmiPspPkg_SUPPORT" "=" "0"
End

TOKEN
	Name  = "AMD_FIRMWARE_NCB_ERASE_POLARITY"
	Value  = "$(FLASH_ERASE_POLARITY)"
	Help  = "Flash Device Erase Polarity"
	TokenType = Integer
	TargetEQU = Yes
	Range  = "0 or 1"
End

TOKEN
	Name  = "--------- Token definition for SB900 Internal EC ---------"
	Value  = "---------------------------------------------------------"
	TokenType = Expression
End

TOKEN
	Name  = "SB900_EC_SUPPORT"
	Value  = "0"
	Help  = "Main switch to enable integrated EC support in Project"
	TokenType = Boolean
	TargetEQU = Yes
	TargetMAK = Yes
	TargetH = Yes
End

TOKEN
	Name  = "SB900_EC_CHANNEL0"
	Value  = "1"
	Help  = "Main switch to enable integrated EC support in Project"
	TokenType = Integer
	TargetH = Yes
	Token = "SB900_EC_SUPPORT" "=" "1"
End

TOKEN
	Name  = "EC_SUREBOOT_FEATURE"
	Value  = "1"
	Help  = "Switch to include EC sureboot feature in BIOS"
	TokenType = Boolean
	TargetEQU = Yes
	TargetMAK = Yes
	Token = "SB900_EC_SUPPORT" "=" "1"
End

TOKEN
	Name  = "EC_LDN5_MAILBOX_BASE_ADDRESS"
	Value  = "0x550"
	Help  = "This is the base address of the EC Mailbox (Logical Device 0x05, Reg 0x60, 0xx61)"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "EC_LDN5_IRQ"
	Value  = "0x5"
	Help  = "This is the irq assigned to LDN5 in EC(Logical Device 0x05, Reg 0x70)"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "EC_LDN9_MAILBOX_BASE_ADDRESS"
	Value  = "0x3E"
	Help  = "This is the base address of the EC Mailbox (Logical Device 0x09, Reg 0x60, 0xx61)"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "SB900_EC_BIN"
	Value  = "AmiChipsetModulePkg\LegacyRom\Imc\AMDKCZ00.bin"
	TokenType = Expression
	TargetMAK = Yes
	TargetFDF = Yes
	Token = "SB900_EC_SUPPORT" "=" "1"
End

FD_AREA
	Name  = "SB900_EC_BIN"
	TYPE  = "RAW"
	FD_INFO  = "AMIROM"
	Offset  = "$(SB900_EC_OFFSET)"
	Size  = "$(SB900_EC_SIZE)"
	Attributes  = "0x0"
	File  = "AmiChipsetModulePkg\LegacyRom\Imc\AMDKCZ00.bin"
	Token = "SB900_EC_SUPPORT" "=" "1"
End
######
### <AAV> use following new token to replace original flash-layout token.
######
TOKEN
	Name  = "SB900_EC_OFFSET"
	Value  = "$(FCH_FIRMWARE_OFFSET) +$(XHCI_FIRWARE_SIZE)+$(ROMSIG_SIZE)"
	Help  = "Offset to the start of the HYGON firmware area from the start of the ROM image"
	TokenType = Integer
	TargetMAK = Yes
	Lock = Yes
	Token = "SB900_EC_SUPPORT" "=" "1"
End

TOKEN
	Name  = "FCH_FIRMWARE_SIZE"
	Value  = "$(SB900_EC_SIZE)+$(XHCI_FIRWARE_SIZE)+$(ROMSIG_SIZE)"
	Help  = "The firmware size of whole HYGON firmware. (ROMSIG, XHCI , IMC , GEC, Etc....)\Default is 64K"
	TokenType = Integer
	TargetEQU = Yes
	TargetMAK = Yes
	TargetH = Yes
	Lock = Yes
	Token = "SB900_EC_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SB900_EC_SIZE"
	Value  = "0x10000"
	Help  = "Hudson EC firmware size.\!!! must to use hexadecimal expression in Address for INSERT.exe. !!!"
	TokenType = Integer
	TargetMAK = Yes
	TargetH = Yes
	Token = "SB900_EC_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SB900_EC_BASE"
	Value  = "$(FCH_FIRMWARE_BASE)+$(XHCI_FIRWARE_SIZE)+$(ROMSIG_SIZE)"
	Help  = "Starting address of the SB900 EC flash area ,it will locate +3*block"
	TokenType = Integer
	TargetEQU = Yes
	TargetMAK = Yes
	TargetH = Yes
	Lock = Yes
	Range  = "From: 4G - FLASH_SIZE To: 4G"
	Token = "SB900_EC_SUPPORT" "=" "1"
End

TOKEN
	Name  = " "
	Value  = "0"
	TokenType = Integer
End

TOKEN
	Name  = "================= XHCI_Firmware_Support ====================="
	Value  = "==========================================================="
	TokenType = Expression
End

TOKEN
	Name  = "XHCI_Firmware_Support"
	Value  = "1"
	TokenType = Boolean
	TargetEQU = Yes
	TargetMAK = Yes
	TargetH = Yes
End

TOKEN
	Name  = "FCH_NO_XHCI_SUPPORT"
	Value  = "1"
	TokenType = Boolean
	TargetEQU = Yes
	TargetMAK = Yes
	TargetH = Yes
	Lock = Yes
	Token = "XHCI_Firmware_Support" "!=" "1"
End

TOKEN
	Name  = "XHCI_FIRMWARE_BASE"
	Value  = "$(FCH_FIRMWARE_BASE) + $(ROMSIG_SIZE)"
	Help  = "Starting address for 2M FLASH"
	TokenType = Integer
	TargetEQU = Yes
	TargetMAK = Yes
	TargetH = Yes
	Lock = Yes
	Range  = "From: 4G - FLASH_SIZE To: 4G"
	Token = "XHCI_Firmware_Support" "=" "1"
End

TOKEN
	Name  = "XHCI_FIRMWARE_OFFSET"
	Value  = "$(FCH_FIRMWARE_OFFSET) + $(ROMSIG_SIZE)"
	Help  = "Offset to the start of the HYGON XHCI firmware area from the start of the ROM image"
	TokenType = Integer
	TargetEQU = Yes
	TargetMAK = Yes
	TargetH = Yes
	Lock = Yes
	Token = "XHCI_Firmware_Support" "=" "1"
End

TOKEN
	Name  = "XHCI_FIRWARE_SIZE"
	Value  = "0x16000"
	Help  = "XHCI firmware bin size, 32kbt"
	TokenType = Integer
	TargetMAK = Yes
	TargetH = Yes
	Token = "XHCI_Firmware_Support" "=" "1"
End

TOKEN
	Name  = "XHCI_EVENT_SERVICE_MODE"
	Value  = "1"
	Help  = "This token controlls xHCI event service mode.\0 - Use periodic timer SMI.\1 - Use xHCI hardware SMI.\2 - Both periodic timer SMI and se xHCI hardware SMI."
	TokenType = Integer
	TargetH = Yes
	Range  = "0..2"
	Token = "XHCI_Firmware_Support" "=" "1"
End

TOKEN
	Name  = "XHCI_RECOVERY_PATH_MODE"
	Value  = "0"
	Help  = "This token controlls the path to get the XHCI firmware.\0 - form Rom Hole.\1 - From FV BB."
	TokenType = Integer
	TargetMAK = Yes
	TargetH = Yes
	Token = "XHCI_Firmware_Support" "=" "1"
End

TOKEN
	Name  = "XHCI_RECOVERY_BIN"
	Value  = "AmiChipsetModulePkg\LegacyRom\Xhci\KernXhc.rom"
	Help  = "XHCI Recovery BIN"
	TokenType = File
	TargetFDF = Yes
	Token = "XHCI_RECOVERY_PATH_MODE" "=" "1"
End


##<AAV> move to DEC later
TOKEN
	Name  = "XHCI_RECOVERY_FIRMWARE_GUID"
	Value  = "{0xF09B4AA8, 0x8DDD, 0x4B04, 0x81, 0x6D, 0xEB, 0xCB, 0xF1, 0x7F, 0x96, 0x68}"
	Help  = "GUID used to get XHCI firmware from FV BB"
	TokenType = Expression
	TargetH = Yes
	Range  = "GUID"
	Token = "XHCI_RECOVERY_PATH_MODE" "=" "1"
End

TOKEN
	Name  = "XHCI_RECOVERY_FIRMWARE_FILE_GUID"
	Value  = "F09B4AA8-8DDD-4B04-816D-EBCBF17F9668"
	Help  = "GUID used to get XHCI firmware from FV BB"
	TokenType = Expression
	TargetFDF = Yes
	Range  = "GUID"
	Token = "XHCI_RECOVERY_PATH_MODE" "=" "1"
End

TOKEN
	Name  = "================= FCH Firmware Family support ====================="
	Value  = "==========================================================="
	TokenType = Expression
End

TOKEN
	Name  = "FCH_FW_FAMILY"
	Value  = "6"
	Help  = "This TOKEN can switch XHCI FW and Raid driver support type on current platform, 1 - (Unused) Hudson only, 2 - (Unused) Bolton only, 3 - (Unused) Both Hudson and Bolton. /4 - all the family, 5 - Yangtze only, 6 - Avalon only."
	TokenType = Integer
	TargetH = Yes
	Range  = "1-6"
End

TOKEN
	Name  = "------------ Token definition for SIO component ------------"
	Value  = "---------------------------------------------------------"
	TokenType = Expression
End

TOKEN
	Name  = "SIO_SB_BUS_NUM"
	Value  = "0"
	Help  = "SB LPC Bus Number"
	TokenType = Integer
	TargetH = Yes
	Token = "SIO_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SIO_SB_DEV_NUM"
	Value  = "0x14"
	Help  = "SB LPC Device Number"
	TokenType = Integer
	TargetH = Yes
	Token = "SIO_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SIO_SB_FUNC_NUM"
	Value  = "0x3"
	Help  = "SB LPC Function Number"
	TokenType = Integer
	TargetH = Yes
	Token = "SIO_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SB_SIO_PME_BASE_ADDRESS"
	Value  = "0xE00"
	Help  = "SIO PME Base Address\It will be program into SIO/Taishan"
	TokenType = Integer
	TargetH = Yes
	Range  = "00 - 0FFFFh"
End

TOKEN
	Name  = " "
	Value  = "0"
	TokenType = Integer
End

TOKEN
	Name  = "---------------- CIMx token temporary  -------------------"
	Value  = "---------------------------------------------------------"
	TokenType = Expression
End

TOKEN
	Name  = "CIM_LEGACY_FREE"
	Value  = "0"
	TokenType = Integer
	TargetH = Yes
End

PcdMapping 
    Name  = "PcdLegacyFree"
    GuidSpace  = "gEfiAmdAgesaModulePkgTokenSpaceGuid"
    PcdType  = "PcdsDynamicDefault"
    DataType  = "Boolean"
    Value  = "$(CIM_LEGACY_FREE)"
    Offset  = 00h
    Length  = 01h
    TargetDSC = Yes
End

TOKEN
	Name  = "SB_DEBUG_OPTION_SUPPORT"
	Value  = "1"
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
	Name  = "SB_THRMTRIP_SUPPORT"
	Value  = "1"
	Help  = "Support THRMTRIP# in setup and register setting"
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
	Name  = "SB_PCIB_DEBUG_OPTIONS"
	Value  = "1"
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
	Name  = "SB_KBC_ASSERT_CLEAR"
	Value  = "0"
	Help  = "SB900 RPR 2.9: This token  must be set by the platform system BIOS if the KBRST#/ GEVENT1# I/O pin is not connected to system keyboard reset or is configured as GEvent1 function."
	TokenType = Boolean
	TargetEQU = Yes
	TargetH = Yes
End

TOKEN
	Name  = "USB_RX_MODE"
	Value  = "0"
	Help  = "P20100610B CG PLL multiplier for USB Rx 1.1 mode <b>0</b> - disable <b>1</b> - enable"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "===================== THE SB900 ====================="
	Value  = "==========================================================="
	TokenType = Expression
End

TOKEN
	Name  = "SB_MMIO_SUPPORT"
	Value  = "1"
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
	Name  = "SB_MMIO_BASE"
	Value  = "0xFED80000"
	Help  = "SB Resource MMIO_BASE"
	TokenType = Integer
	TargetH = Yes
	Token = "SB_MMIO_SUPPORT" "=" "1"
End

TOKEN
	Name  = "GIOB"
	Value  = "$(SB_MMIO_BASE)+01500h"
	Help  = "GPIO MMIO BASE"
	TokenType = Integer
	TargetEQU = Yes
	TargetASL = Yes
	Token = "SB_MMIO_SUPPORT" "=" "1"
End

TOKEN
	Name  = "IOMB"
	Value  = "$(SB_MMIO_BASE)+0D00h"
	Help  = "GPIO MUX MMIO BASE"
	TokenType = Integer
	TargetEQU = Yes
	TargetASL = Yes
	Token = "SB_MMIO_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SSMB"
	Value  = "$(SB_MMIO_BASE)+0200h"
	Help  = "SMI MMIO BASE"
	TokenType = Integer
	TargetEQU = Yes
	TargetASL = Yes
	Token = "SB_MMIO_SUPPORT" "=" "1"
End

TOKEN
	Name  = "CMOS_BANK1_INDEX"
	Value  = "0x72"
	Help  = "Index port to access the second CMOS bank. \(Registers in range: 0x80-0xff)"
	TokenType = Integer
	TargetEQU = Yes
	TargetH = Yes
End

TOKEN
	Name  = "CMOS_BANK1_DATA"
	Value  = "0x73"
	Help  = "Data port to access the second CMOS bank. \(Registers in range: 0x80-0xff)"
	TokenType = Integer
	TargetEQU = Yes
	TargetH = Yes
End

TOKEN
	Name  = "CMOS_BANK1_INDEX_IS_TRANSLATED"
	Value  = "0"
	Help  = "1 = Index port value requires translation from CMOS address.\0 = Index port value equals CMOS address."
	TokenType = Boolean
	TargetEQU = Yes
	TargetH = Yes
	Lock = Yes
End

TOKEN
	Name  = "CMOS_RESET_WORKAROUND_REG"
	Value  = "0x90"
	Help  = "Data port to access the second CMOS bank. \(Registers in range: 0x80-0xBF   Chipset porting)"
	TokenType = Integer
	TargetEQU = Yes
End

TOKEN
	Name  = "CMOS_BAD_CHECK_ADDRESS"
	Value  = "0x9F"
	Help  = "Used to check CMOS bad or good location"
	TokenType = Integer
	TargetEQU = Yes
	TargetMAK = Yes
	TargetH = Yes
End
TOKEN
	Name  = "===================== SB S3 resume method   ====================="
	Value  = "==========================================================="
	TokenType = Expression
End

TOKEN
	Name  = "SB_S3_SMI_SUPPORT"
	Value  = "1"
	Help  = "P20100506B+ Main switch to enable S3 Resume by smi in Project"
	TokenType = Boolean
	TargetEQU = Yes
	TargetMAK = Yes
	TargetH = Yes
End

TOKEN
	Name  = "SB_BEFORE_PCI_RESTORE_SWSMI"
	Value  = "0xB3"
    TokenType = Integer
	TargetEQU = Yes
	TargetMAK = Yes
	TargetH = Yes
End

TOKEN
	Name  = "SB_AFTER_PCI_RESTORE_SWSMI"
	Value  = "0xB4"
    TokenType = Integer
	TargetEQU = Yes
	TargetMAK = Yes
	TargetH = Yes
End

TOKEN
	Name  = "SB_START_TIMER_SMI"
	Value  = "0xB5"
    TokenType = Integer
	TargetEQU = Yes
	TargetMAK = Yes
	TargetH = Yes
End

TOKEN
	Name  = "SB_STOP_TIMER_SMI"
	Value  = "0xB6"
    TokenType = Integer
	TargetEQU = Yes
	TargetMAK = Yes
	TargetH = Yes
End

TOKEN
	Name  = "===================== SB  CIMX token  ====================="
	Value  = "==========================================================="
	TokenType = Expression
End

TOKEN
	Name  = "HYGONAHCI_SUPPORT"
	Value  = "0"
	TokenType = Boolean
End

TOKEN
	Name  = "SB_TIMER_TICK_INTERVAL_WA"
	Value  = "0"
	Help  = " SB900 Timer tick interval workaround"
	TokenType = Boolean
	TargetEQU = Yes
	TargetMAK = Yes
	TargetH = Yes
End

TOKEN
	Name  = "SB_USB_BATTERY_CHARGE_SUPPORT"
	Value  = "0"
	Help  = " SB USB BATTERY CHANGE SUPPORT"
	TokenType = Boolean
	TargetEQU = Yes
	TargetMAK = Yes
	TargetH = Yes
End

TOKEN
	Name  = "FCH_USB1_OVER_CURRENT_CONTROL"
	Value  = "{0xFF, 0xFF, 0xFF, 0xFF, 0xFF}"
	Help  = " Over current control for each port under USB1."
	TokenType = Expression
	TargetH = Yes
End

TOKEN
	Name  = "FCH_USB2_OVER_CURRENT_CONTROL"
	Value  = "{0xFF, 0xFF, 0xFF, 0xFF, 0xFF}"
	Help  = " Over current control for each port under USB2."
	TokenType = Expression
	TargetH = Yes
End

TOKEN
	Name  = "FCH_USB3_OVER_CURRENT_CONTROL"
	Value  = "{0xFF, 0xFF, 0xFF, 0xFF}"
	Help  = " Over current control for each port under USB3."
	TokenType = Expression
	TargetH = Yes
End

TOKEN
	Name  = "FCH_XHCI0_OVER_CURRENT_CONTROL"
	Value  = "{0xFF, 0xFF}"
	Help  = " Over current control for each port under XHCI0."
	TokenType = Expression
	TargetH = Yes
End

TOKEN
	Name  = "FCH_LPC_CLK_RUN_SUPPORT"
	Value  = "1"
	Help  = " LPC Clock Run support"
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
	Name  = "FCH_SPI_ROM_MOUNTED"
	Value  = "1"
	Help  = " SPI ROM is used"
	TokenType = Boolean
	TargetH = Yes
	Token = "FCH_LPC_CLK_RUN_SUPPORT" "=" "1"
End

TOKEN
	Name  = "===================== SB900 IMC Control  ====================="
	Value  = "==========================================================="
	TokenType = Expression
End

TOKEN
	Name  = "HWM_DISPLAY_SUPPORT"
	Value  = "0"
	Help  = " FAN control by the IMC"
	TokenType = Boolean
	TargetEQU = Yes
	TargetMAK = Yes
	TargetH = Yes
	Token = "SB900_EC_SUPPORT" "=" "1"
End

TOKEN
	Name  = "===================== SB900 feature Support token  ====================="
	Value  = "==========================================================="
	TokenType = Expression
End

TOKEN
    Name  = "CAPSULE_RESET_MODE"
    Value  = "0"
    Help  = "Capsule reset mode.\0 - RTC S3 wakeup .\1 - Warm reset. "
    TokenType = Boolean
    TargetEQU = Yes
    TargetH = Yes
    Lock = Yes
End

TOKEN
	Name  = "FCH_CAPSULE_STOP_USB_SUPPORT"
	Value  = "1"
	Help  = "Main switch to stop USB controller before system warmreset for secure flash function"
	TokenType = Boolean
	TargetEQU = Yes
	TargetMAK = Yes
	TargetH = Yes
End

TOKEN
	Name  = "HYGON_SB_CODEC_TABLE_BY_ELINK"
	Value  = "1"
	Help  = "Main switch to enable Codec Table by CSP elink or SDL,you could refer EIP62130."
	TokenType = Boolean
	TargetMAK = Yes
	TargetH = Yes
End

TOKEN
	Name  = "MAX_MANAGED_CMOS_ADDRESS"
	Value  = "256"
	Help  = "Last CMOS address + 1 used to specify the maximum address that is managed by CMOS Manager. \\Note: the region starting at FIRST_MANAGED_CMOS_ADDRESS and ending at MAX_MANAGED_CMOS_ADDRESS - 1 represents the managed region."
	TokenType = Integer
	TargetEQU = Yes
	TargetH = Yes
End

TOKEN
	Name  = "CONTROL_ALL_USB_METHOD"
	Value  = "0"
	Help  = "Enable for control all USB using one setup item (EIP:50313)"
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
	Name  = "OEM_USB_PER_PORT_DISABLE_SUPPORT"
	Value  = "0"
	Help  = "USB preport disable function will execute at ready to boot. USB device can use at setup when port is disable but not at OS, DOS or Shell."
	TokenType = Boolean
	TargetH = Yes
	Token = "CONTROL_ALL_USB_METHOD" "=" "0"
End

TOKEN
	Name  = "IO_APIC_VERSION_PARAMETER"
	Value  = "0x22"
	Help  = "IOAPIC/IOSAPIC revision BOUNDARY. For Intel it is should be 0x21. Clone and reasign if different"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "===================== AGESA-FCH build time options and configurations  ====================="
	Value  = "==========================================================="
	TokenType = Expression
End

TOKEN
	Name  = "BLDCFG_SMBUS0_BASE_ADDRESS"
	Value  = "$(SMBUS_BASE_ADDRESS)"
	Help  = "SMBUS0 Controller Base Address"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "BLDCFG_SMBUS1_BASE_ADDRESS"
	Value  = "$(SMBUS1_BASE_ADDRESS)"
	Help  = "SMBUS1 Controller Base Address"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "BLDCFG_SIO_PME_BASE_ADDRESS"
	Value  = "$(SB_SIO_PME_BASE_ADDRESS)"
	Help  = "I/O base address for LPC I/O target range"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "BLDCFG_ACPI_PM1_EVT_BLOCK_ADDRESS"
	Value  = "$(PM1A_EVT_BLK_ADDRESS)"
	Help  = "I/O base address of ACPI power management Event Block"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "BLDCFG_ACPI_PM1_CNT_BLOCK_ADDRESS"
	Value  = "$(PM1A_CNT_BLK_ADDRESS)"
	Help  = "I/O base address of ACPI power management Control Block"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "BLDCFG_ACPI_PM_TMR_BLOCK_ADDRESS"
	Value  = "$(PM_TMR_BLK_ADDRESS)"
	Help  = "I/O base address of ACPI power management Timer Block"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "BLDCFG_ACPI_CPU_CNT_BLOCK_ADDRESS"
	Value  = "$(PBLK)"
	Help  = "I/O base address of ACPI power management CPU Control Block"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "BLDCFG_ACPI_GPE0_BLOCK_ADDRESS"
	Value  = "$(GPE0_BLK_ADDRESS)"
	Help  = "I/O base address of ACPI power management General Purpose Event Block"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "BLDCFG_WATCHDOG_TIMER_BASE"
	Value  = "$(WDT_BASE_ADDRESS)"
	Help  = "Watchdog Timer base address"
	TokenType = Integer
	TargetH = Yes
	Token = "WDT_SUPPORT" "=" "1"
End

TOKEN
	Name  = "BLDCFG_ACPI_PMA_BLK_ADDRESS"
	Value  = "$(PM2_BASE_ADDRESS)"
	Help  = "I/O base address of ACPI power management additional control block"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "BLDCFG_SMI_CMD_PORT_ADDRESS"
	Value  = "$(SW_SMI_IO_ADDRESS)"
	Help  = "I/O base address of ACPI SMI Command Block"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "BLDCFG_ROM_BASE_ADDRESS"
	Value  = "$(SPI_BASE_ADDRESS)"
	Help  = "Base address for the SPI ROM controller"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "BLDCFG_GEC_SHADOW_ROM_BASE"
	Value  = "0xFED61000"
	Help  = "32-bit base address to the GEC shadow ROM"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "BLDCFG_HPET_BASE_ADDRESS"
	Value  = "$(HPET_BASE_ADDRESS)"
	Help  = "HPET MMIO base address"
	TokenType = Integer
	TargetH = Yes
	Token = "HPET_SUPPORT" "=" "1"
End

TOKEN
	Name  = "BLDCFG_HPET_BASE_ADDRESS"
	Value  = "0"
	Help  = "HPET MMIO base address"
	TokenType = Integer
	TargetH = Yes
	Token = "HPET_SUPPORT" "=" "0"
End

TOKEN
	Name  = "BLDCFG_SMBUS_SSID"
	Value  = "0"
	Help  = "Subsystem ID of SMBUS controller, Don't touch this token assign 0 to prevent AGESA-FCH program SSID.!! We use AMI table instead."
	TokenType = Integer
	TargetH = Yes
	Lock = Yes
End

TOKEN
	Name  = "BLDCFG_IDE_SSID"
	Value  = "0"
	Help  = "Subsystem ID of IDE controller, Don't touch this token assign 0 to prevent AGESA-FCH program SSID.!! We use AMI table instead."
	TokenType = Integer
	TargetH = Yes
	Lock = Yes
End

TOKEN
	Name  = "BLDCFG_SATA_AHCI_SSID"
	Value  = "0"
	Help  = "Subsystem ID of SATA controller in AHCI mode, Don't touch this token assign 0 to prevent AGESA-FCH program SSID.!! We use AMI table instead."
	TokenType = Integer
	TargetH = Yes
	Lock = Yes
End

TOKEN
	Name  = "BLDCFG_SATA_IDE_SSID"
	Value  = "0"
	Help  = "Subsystem ID of SATA controller in IDE mode, Don't touch this token assign 0 to prevent AGESA-FCH program SSID.!! We use AMI table instead."
	TokenType = Integer
	TargetH = Yes
	Lock = Yes
End

TOKEN
	Name  = "BLDCFG_SATA_RAID5_SSID"
	Value  = "0"
	Help  = "Subsystem ID of SATA controller in RAID5 mode, Don't touch this token assign 0 to prevent AGESA-FCH program SSID.!! We use AMI table instead."
	TokenType = Integer
	TargetH = Yes
	Lock = Yes
End

TOKEN
	Name  = "BLDCFG_SATA_RAID_SSID"
	Value  = "0"
	Help  = "Subsystem ID of SATA controller in RAID mode, Don't touch this token assign 0 to prevent AGESA-FCH program SSID.!! We use AMI table instead."
	TokenType = Integer
	TargetH = Yes
	Lock = Yes
End

TOKEN
	Name  = "BLDCFG_EHCI_SSID"
	Value  = "0"
	Help  = "Subsystem ID of EHCI, Don't touch this token assign 0 to prevent AGESA-FCH program SSID.!! We use AMI table instead."
	TokenType = Integer
	TargetH = Yes
	Lock = Yes
End

TOKEN
	Name  = "BLDCFG_LPC_SSID"
	Value  = "0"
	Help  = "Subsystem ID of LPC ISA Bridge, Don't touch this token assign 0 to prevent AGESA-FCH program SSID.!! We use AMI table instead."
	TokenType = Integer
	TargetH = Yes
	Lock = Yes
End

TOKEN
	Name  = "BLDCFG_SD_SSID"
	Value  = "0"
	Help  = "Subsystem ID of SecureDigital controller, Don't touch this token assign 0 to prevent AGESA-FCH program SSID.!! We use AMI table instead."
	TokenType = Integer
	TargetH = Yes
	Lock = Yes
End

TOKEN
	Name  = "BLDCFG_XHCI_SSID"
	Value  = "0"
	Help  = "Subsystem ID of XHCI, Don't touch this token assign 0 to prevent AGESA-FCH program SSID.!! We use AMI table instead."
	TokenType = Integer
	TargetH = Yes
	Lock = Yes
End

TOKEN
	Name  = "BLDCFG_FCH_PORT80_BEHIND_PCIB"
	Value  = "!$(SB_LPC_PORT80_SUPPORT)"
	Help  = "Is port80 cycle going to the PCI bridge"
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
	Name  = "BLDCFG_FCH_IR_PIN_CONTROL"
	Value  = "0x23"
	Help  = "Fch IR pin control. DEFAULT : To use RX1 as IR, TX1 as FCH_ODD_DA"
    TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "FCH_NO_IMC_SUPPORT"
	Value  = "TRUE"
	Help  = "FCH-IMC Switch. DEFAULT : TRUE measns disable"
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
	Name  = "FCH_MMIO_RANGE_CONTROL"
	Value  = "1"
	Help  = "Enable to calculate FCH MMIO range and set as non-posted"
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
	Name  = "SBCSPLib"
	Value  = "$$(LIB_BUILD_DIR)\AmiSbCSPLib.lib"
	TokenType = Expression
	TargetMAK = Yes
End

TOKEN
	Name  = "===================== SB  GEVENT MAP SCI Event Status bit token Set ====================="
	Value  = "==========================================================="
	TokenType = Expression
End

TOKEN
	Name  = "XHCI0_PME_MAP_EVENTBIT"
	Value  = "25"
	Help  = "Map event source to the input of Event_Status for Wakeup or SCI interrupt.\ 0x00: map event source  to the input of Event_Status bit 0\ 0x01: map event source  to the input of Event_Status bit 1\.\.\0x1F: map event source to the input of Event_Status bit 31"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 - 0xffff"
End

TOKEN
	Name  = "XHCI1_PME_MAP_EVENTBIT"
	Value  = "25"
	Help  = "Map event source to the input of Event_Status for Wakeup or SCI interrupt.\ 0x00: map event source  to the input of Event_Status bit 0\ 0x01: map event source  to the input of Event_Status bit 1\.\.\0x1F: map event source to the input of Event_Status bit 31"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 - 0xffff"
End

TOKEN
	Name  = "USB_WAKUP0_MAP_EVENTBIT"
	Value  = "24"
	Help  = "Map event source to the input of Event_Status for Wakeup or SCI interrupt.\ 0x00: map event source  to the input of Event_Status bit 0\ 0x01: map event source  to the input of Event_Status bit 1\.\.\0x1F: map event source to the input of Event_Status bit 31"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 - 0xffff"
End

TOKEN
	Name  = "USB_WAKUP1_MAP_EVENTBIT"
	Value  = "24"
	Help  = "Map event source to the input of Event_Status for Wakeup or SCI interrupt.\ 0x00: map event source  to the input of Event_Status bit 0\ 0x01: map event source  to the input of Event_Status bit 1\.\.\0x1F: map event source to the input of Event_Status bit 31"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 - 0xffff"
End

TOKEN
	Name  = "USB_WAKUP2_MAP_EVENTBIT"
	Value  = "24"
	Help  = "Map event source to the input of Event_Status for Wakeup or SCI interrupt.\ 0x00: map event source  to the input of Event_Status bit 0\ 0x01: map event source  to the input of Event_Status bit 1\.\.\0x1F: map event source to the input of Event_Status bit 31"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 - 0xffff"
End

TOKEN
	Name  = "USB_WAKUP3_MAP_EVENTBIT"
	Value  = "24"
	Help  = "Map event source to the input of Event_Status for Wakeup or SCI interrupt.\ 0x00: map event source  to the input of Event_Status bit 0\ 0x01: map event source  to the input of Event_Status bit 1\.\.\0x1F: map event source to the input of Event_Status bit 31"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 - 0xffff"
End

TOKEN
	Name  = "SBGPP_PME0_MAP_EVENTBIT"
	Value  = "15"
	Help  = "Map event source to the input of Event_Status for Wakeup or SCI interrupt.\ 0x00: map event source  to the input of Event_Status bit 0\ 0x01: map event source  to the input of Event_Status bit 1\.\.\0x1F: map event source to the input of Event_Status bit 31"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 - 0xffff"
End

TOKEN
	Name  = "SBGPP_PME1_MAP_EVENTBIT"
	Value  = "16"
	Help  = "Map event source to the input of Event_Status for Wakeup or SCI interrupt.\ 0x00: map event source  to the input of Event_Status bit 0\ 0x01: map event source  to the input of Event_Status bit 1\.\.\0x1F: map event source to the input of Event_Status bit 31"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 - 0xffff"
End

TOKEN
	Name  = "SBGPP_PME2_MAP_EVENTBIT"
	Value  = "17"
	Help  = "Map event source to the input of Event_Status for Wakeup or SCI interrupt.\ 0x00: map event source  to the input of Event_Status bit 0\ 0x01: map event source  to the input of Event_Status bit 1\.\.\0x1F: map event source to the input of Event_Status bit 31"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 - 0xffff"
End

TOKEN
	Name  = "SBGPP_PME3_MAP_EVENTBIT"
	Value  = "18"
	Help  = "Map event source to the input of Event_Status for Wakeup or SCI interrupt.\ 0x00: map event source  to the input of Event_Status bit 0\ 0x01: map event source  to the input of Event_Status bit 1\.\.\0x1F: map event source to the input of Event_Status bit 31"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 - 0xffff"
End

TOKEN
	Name  = "SBGPP_HP0_MAP_EVENTBIT"
	Value  = "0"
	Help  = "Map event source to the input of Event_Status for Wakeup or SCI interrupt.\ 0x00: map event source  to the input of Event_Status bit 0\ 0x01: map event source  to the input of Event_Status bit 1\.\.\0x1F: map event source to the input of Event_Status bit 31"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 - 0xffff"
End

TOKEN
	Name  = "SBGPP_HP1_MAP_EVENTBIT"
	Value  = "0"
	Help  = "Map event source to the input of Event_Status for Wakeup or SCI interrupt.\ 0x00: map event source  to the input of Event_Status bit 0\ 0x01: map event source  to the input of Event_Status bit 1\.\.\0x1F: map event source to the input of Event_Status bit 31"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 - 0xffff"
End

TOKEN
	Name  = "SBGPP_HP2_MAP_EVENTBIT"
	Value  = "0"
	Help  = "Map event source to the input of Event_Status for Wakeup or SCI interrupt.\ 0x00: map event source  to the input of Event_Status bit 0\ 0x01: map event source  to the input of Event_Status bit 1\.\.\0x1F: map event source to the input of Event_Status bit 31"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 - 0xffff"
End

TOKEN
	Name  = "SBGPP_HP3_MAP_EVENTBIT"
	Value  = "0"
	Help  = "Map event source to the input of Event_Status for Wakeup or SCI interrupt.\ 0x00: map event source  to the input of Event_Status bit 0\ 0x01: map event source  to the input of Event_Status bit 1\.\.\0x1F: map event source to the input of Event_Status bit 31"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 - 0xffff"
End

TOKEN
	Name  = "SATA_GEVENT0_MAP_EVENTBIT"
	Value  = "30"
	Help  = "Map event source to the input of Event_Status for Wakeup or SCI interrupt.\ 0x00: map event source  to the input of Event_Status bit 0\ 0x01: map event source  to the input of Event_Status bit 1\.\.\0x1F: map event source to the input of Event_Status bit 31"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 - 0xffff"
End

TOKEN
	Name  = "SATA_GEVENT1_MAP_EVENTBIT"
	Value  = "31"
	Help  = "Map event source to the input of Event_Status for Wakeup or SCI interrupt.\ 0x00: map event source  to the input of Event_Status bit 0\ 0x01: map event source  to the input of Event_Status bit 1\.\.\0x1F: map event source to the input of Event_Status bit 31"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 - 0xffff"
End


TOKEN
	Name  = "IMC_GEVENT0_MAP_EVENTBIT"
	Value  = "12"
	Help  = "Map event source to the input of Event_Status for Wakeup or SCI interrupt.\ 0x00: map event source  to the input of Event_Status bit 0\ 0x01: map event source  to the input of Event_Status bit 1\.\.\0x1F: map event source to the input of Event_Status bit 31"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 - 0xffff"
End

TOKEN
	Name  = "IMC_GEVENT1_MAP_EVENTBIT"
	Value  = "0"
	Help  = "Map event source to the input of Event_Status for Wakeup or SCI interrupt.\ 0x00: map event source  to the input of Event_Status bit 0\ 0x01: map event source  to the input of Event_Status bit 1\.\.\0x1F: map event source to the input of Event_Status bit 31"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 - 0xffff"
End

TOKEN
	Name  = "CIR_PME_MAP_EVENTBIT"
	Value  = "28"
	Help  = "Map event source to the input of Event_Status for Wakeup or SCI interrupt.\ 0x00: map event source  to the input of Event_Status bit 0\ 0x01: map event source  to the input of Event_Status bit 1\.\.\0x1F: map event source to the input of Event_Status bit 31"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 - 0xffff"
End

TOKEN
	Name  = "WAKEPIN_GEVENT_MAP_EVENTBIT"
	Value  = "0"
	Help  = "Map event source to the input of Event_Status for Wakeup or SCI interrupt.\ 0x00: map event source  to the input of Event_Status bit 0\ 0x01: map event source  to the input of Event_Status bit 1\.\.\0x1F: map event source to the input of Event_Status bit 31"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 - 0xffff"
End

TOKEN
	Name  = "FANTH_GEVENT_MAP_EVENTBIT"
	Value  = "13"
	Help  = "Map event source to the input of Event_Status for Wakeup or SCI interrupt.\ 0x00: map event source  to the input of Event_Status bit 0\ 0x01: map event source  to the input of Event_Status bit 1\.\.\0x1F: map event source to the input of Event_Status bit 31"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 - 0xffff"
End

TOKEN
	Name  = "ASF_MASTERINTR_MAP_EVENTBIT"
	Value  = "0"
	Help  = "Map event source to the input of Event_Status for Wakeup or SCI interrupt.\ 0x00: map event source  to the input of Event_Status bit 0\ 0x01: map event source  to the input of Event_Status bit 1\.\.\0x1F: map event source to the input of Event_Status bit 31"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 - 0xffff"
End

TOKEN
	Name  = "ASF_SLAVEINTR_MAP_EVENTBIT"
	Value  = "0"
	Help  = "Map event source to the input of Event_Status for Wakeup or SCI interrupt.\ 0x00: map event source  to the input of Event_Status bit 0\ 0x01: map event source  to the input of Event_Status bit 1\.\.\0x1F: map event source to the input of Event_Status bit 31"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 - 0xffff"
End

TOKEN
	Name  = "SMBUS0_MAP_EVENTBIT"
	Value  = "0"
	Help  = "Map event source to the input of Event_Status for Wakeup or SCI interrupt.\ 0x00: map event source  to the input of Event_Status bit 0\ 0x01: map event source  to the input of Event_Status bit 1\.\.\0x1F: map event source to the input of Event_Status bit 31"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 - 0xffff"
End

TOKEN
	Name  = "TWARN_MAP_EVENTBIT"
	Value  = "1"
	Help  = "Map event source to the input of Event_Status for Wakeup or SCI interrupt.\ 0x00: map event source  to the input of Event_Status bit 0\ 0x01: map event source  to the input of Event_Status bit 1\.\.\0x1F: map event source to the input of Event_Status bit 31"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 - 0xffff"
End

TOKEN
	Name  = "TMI_MAP_EVENTBIT"
	Value  = "0"
	Help  = "Map event source to the input of Event_Status for Wakeup or SCI interrupt.\ 0x00: map event source  to the input of Event_Status bit 0\ 0x01: map event source  to the input of Event_Status bit 1\.\.\0x1F: map event source to the input of Event_Status bit 31"
	TokenType = Integer
	TargetH = Yes
	Range  = "0 - 0xffff"
End

TOKEN
	Name  = "COLD_RESET_WITH_POWER_CYCLE"
	Value  = "0"
	Help  = "1: EfiResetCold issues a full reset (Port 0xCF9[7:0] = 0x0E)./0: EfiResetCold issues a hard reset (Port 0xCF9[7:0] = 0x06)."
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
	Name  = "NONE_SIO_KBC_SUPPORT"
	Value  = "1"
	Help  = "Turn on this token if there is no KBC/SIO controller( Turn on Inchip KBC emulation function )."
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
	Name  = "NONE_SIO_KBC_SUPPORT"
	Value  = "0"
	Help  = "Turn on this token if there is no KBC/SIO controller( Turn on Inchip KBC emulation function )."
	TokenType = Boolean
	TargetH = Yes
	Token = "KBC_SUPPORT" "=" "1"
End

TOKEN
	Name  = "FCH_SERIAL_IRQ_MODE"
	Value  = "0"
	Help  = "define Serial Irq Mode: 1:Continuous mode,0: Active (quiet) mode,In some SIO device ,it only worked at Continuous or quiet mode"
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
	Name  = "FCH_LPC_CLK_DRVSTH"
	Value  = "1"
	Help  = "Drive strength control for LpcClk[1:0] respectively.0=Clock output is 4 mA. 1=Clock output is 8 mA."
    TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "FCH_SATA_DEVSLP_PORT0"
	Value  = "0"
	Help  = "Pass this token to SataDevSlpPort0"
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
	Name  = "FCH_SATA_DEVSLP_PORT0_S5PIN"
	Value  = "6"
	Help  = "Pass this token to SataDevSlpPort0S5Pin"
    TokenType = Integer
	TargetH = Yes
End


TOKEN
	Name  = "FCH_SATA_DEVSLP_PORT1"
	Value  = "0"
	Help  = "Pass this token to SataDevSlpPort1"
	TokenType = Boolean
	TargetH = Yes
End


TOKEN
	Name  = "FCH_SATA_DEVSLP_PORT1_S5PIN"
	Value  = "0"
	Help  = "Pass this token to SataDevSlpPort1S5Pin"
    TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "FCH_SATADBGTX_DRV_STR"
	Value  = "6"
	Help  = "Pass this token to SataDbgTX_DRV_STR"
    TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "FCH_SATADBGTX_DE_EMPH_STR"
	Value  = "6"
	Help  = "Pass this token to SataDbgTX_DE_EMPH_STR"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "USB_BATTERY_CHARGE_ENABLE"
	Value  = "0"
	Help  = "Pass this token to UsbBatteryChargeEnable"
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
	Name  = "REDUCE_USB3PORT_TO_LASTTWO"
	Value  = "0"
	Help  = "Pass this token to ReduceUSB3PortToLastTwo"
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
	Name  = "USB30PORT_INIT"
	Value  = "0"
	Help  = "Pass this token to USB30PortInit"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
    Name  = "SB_DEVICE_REGS_RC_DEFINITION_SUPPORT"
    Value  = "1"
    TokenType = Boolean
    TargetH = Yes
End

TOKEN
    Name  = "SB_DEVICE_REGS_RC_DEFINITION_HEADER"
    Value  = "<Token.h>"
#    Value  = "<AmdAgesaPkg/Proc/Fch/Fch.h>"
    Help  = "PORTING REQUIRED. It is to include the header file for South Bridge in the reference code."
    TokenType = Expression
    TargetH = Yes
    Lock = Yes
    Token = "SB_DEVICE_REGS_RC_DEFINITION_SUPPORT" "=" "1"
End

TOKEN
    Name  = "SDIO_INSTALLATION_SUPPORT"
    Value  = "0"
    Help  = "Switch to enable install OS througth SDIO. SDIO would become non-removable device after enable this feature."
    TokenType = Boolean
    TargetH = Yes
End

TOKEN
	Name  = "SB_AMI_IO_DECODE_LIB_SUPPORT"
	Value  = "1"
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
    Name  = "DISABLE_DAYLIGHT_SAVINGS"
    Value = "0"
    Help  = "1: Disable Daylight Savings; 0: Enable Daylight Savings"
    TokenType = Expression
    TargetH = Yes
End

TOKEN
    Name  = "SB_WAKEUP_TYPE_FN"
    Value  = "1"
    Help  = "Indicate the support for getWakeupTypeForSmbios function\0 = Not supported\1 = Supported"
    TokenType = Boolean
    TargetH = Yes
    Token = "SMBIOS_SUPPORT" "=" "1"
End

TOKEN
	Name  = "HYGON_SB_SIO_PME_BASE_WORKAROUND"
	Value  = "0"
	Help  = "1: apply workaround; 0: skip workaround.\We provide a workaround to restore user's setting \due to AGESA-FCH override [D14F3x64 PCI IO base Address for Wide Generic Port].\Some user like SIO or EC etc."
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
    Name  = "HYGON_SB_SIO_PME_BASE_WORKAROUND"
    Value  = "1"
    Help  = "1: apply workaround; 0: skip workaround.\We provide a workaround to restore user's setting \due to AGESA-FCH override [D14F3x64 PCI IO base Address for Wide Generic Port].\Some user like SIO or EC etc."
    TokenType = Boolean
    TargetH = Yes
    Token = "SIO_SUPPORT" "=" "1"
End

TOKEN
	Name  = "================================= End of tokens ================================="
	Value  = "================================================================================"
	TokenType = Expression
End

PATH
	Name  = "SB_DIR"
	Path  = "AmiChipsetModulePkg/Sb"
End

PATH
	Name  = "SB_LIBRARY_DIR"
	Path  = "AmiChipsetModulePkg/Library"
End

PATH
	Name  = "SB_INCLUDE_DIR"
	Path  = "AmiChipsetModulePkg/Include"
End

PATH
	Name  = "SB_LIBRARY_INCLUDE_DIR"
	Path  = "AmiChipsetModulePkg/Include/Library"
End

PATH
	Name  = "SB_CSPLIB_DIR"
	Path  = "AmiChipsetModulePkg/Library/AmiCspLib"
End

PATH
	Name  = "SB_INIT_DIR"
	Path  = "AmiChipsetModulePkg/SB/SbInit"
End

PATH
	Name  = "CHIPSET_LEGACY_ROM_DIR"
	Path  = "AmiChipsetModulePkg/LegacyRom"
End

MODULE
	Help  = "Includes SB.mak to Project"
	File  = "SB.mak"
End

#ELINK
#	Name  = "IsCtrlHomePressed,"
#	Parent  = "IsRecovery"
#	Help  = "Ctr+Home detection"
#	Token = "KBC_SUPPORT" "=" "1"
#	InvokeOrder = AfterParent
#End

ELINK
	Name  = "SBPEIDBG_Initialize,"
	Parent  = "PeiDebugInitialize"
	Priority  = 10
	Token = "PeiDebugger_SUPPORT" "=" "1"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "SBPEIDBG_InitUsbEhci,"
	Parent  = "PeiDebugInitialize"
	Priority  = 150
	Token = "PeiDebugger_SUPPORT" "=" "1"
	Token = "USB_DEBUG_TRANSPORT" "=" "1"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "SbPeiDbgInitXhci,"
	Parent  = "PeiDebugInitialize"
	Priority  = 150
	Token = "USB_3_DEBUG_SUPPORT" "=" "1"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "$(FCH_FIRMWARE_NCB_DESCRIPTOR)"
	Parent  = "ROM_IMAGE"
	Token = "FCH_FIRMWARE_NCB_SUPPORT" "=" "1"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "{0, 0, 0x80, 0xff, ReadWriteSecondBankTranslated},"
	Parent  = "CMOS_PORT_MAPPING"
	Help  = "Second bank CMOS access range (Registers in range: 0x80-0xff), when index port value is not identical to CMOS address"
	Token = "CMOS_BANK1_INDEX_IS_TRANSLATED" "=" "1"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "{CMOS_BANK1_INDEX, CMOS_BANK1_DATA, 0x80, 0xff, NULL},"
	Parent  = "CMOS_PORT_MAPPING"
	Help  = "Second bank CMOS access range (Registers in range: 0x80-0xff), when index port value is identical to CMOS address"
	Token = "CMOS_BANK1_INDEX_IS_TRANSLATED" "=" "0"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "SECSB_EarlyInit"
	Parent  = "SECCoreAtPowerOn"
	Help  = "SB Early Init in SEC (before Cache as memory enabling)"
	Token = "INCLUDE_SB_ASM_FILE_IN_SEC" "=" "1"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "ITEM_CALLBACK(CHIPSET_FORM_SET_CLASS,0,SBHWMCallBackKey,SB_HWM_CallBack),"
	Parent  = "SetupItemCallbacks"
	Token = "HWM_DISPLAY_SUPPORT" "=" "1"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "SBPEIDBG_InitUsbEhci,"
	Parent  = "UsbDxeDebuggerInitialize"
	Token = "AMI_DEBUGGER_SUPPORT" "=" "1"
	Token = "USB_DEBUG_TRANSPORT" "=" "1"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "SBPEIDBG_IsS3,"
	Parent  = "PeiDbgIsS3Hook,"
	InvokeOrder = ReplaceParent
End

ELINK
	Name  = "SBSmmSaveRestoreStates,"
	Parent  = "SmmSaveRestoreEnvironment"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "AmiChipsetModulePkg/Asl/pci0_osc.asl"
	Parent  = "Core\EM\ACPI\OSCM.asl"
	Token = "ACPI_BUILD_TABLES_3_0" "=" "1"
	Disable = Yes
	InvokeOrder = ReplaceParent
End

ELINK
	Name  = "SbIoDxeInit,"
	Parent  = "RuntimeInitialize"
	Help  = "EIP36094+\Change the SB MMIO (FED8000) to Virtual address\for support the UEFI OS!"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "$(SB900_BUILD_FLAG)"
	Parent  = "SB_BUILD_DXE_FLAG_LIST"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "$(SB900_BUILD_FLAG)"
	Parent  = "SB_BUILD_PEI_FLAG_LIST"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "/D PEIBUILD"
	Parent  = "SB_BUILD_PEI_FLAG_LIST"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "$(SB900_EC_FLAG)"
	Parent  = "SB_BUILD_PEI_FLAG_LIST"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "/D NO_EC_SUPPORT"
	Parent  = "SB_BUILD_DXE_FLAG_LIST"
	Token = "SB900_EC_SUPPORT" "=" "0"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "/D NO_EC_SUPPORT"
	Parent  = "SB_BUILD_PEI_FLAG_LIST"
	Token = "SB900_EC_SUPPORT" "=" "0"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "/D NO_HWM_SUPPORT"
	Parent  = "SB_BUILD_DXE_FLAG_LIST"
	Token = "HWM_DISPLAY_SUPPORT" "=" "0"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "/D NO_HWM_SUPPORT"
	Parent  = "SB_BUILD_PEI_FLAG_LIST"
	Token = "HWM_DISPLAY_SUPPORT" "=" "0"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "/D SB_USB_BATTERY_CHARGE_SUPPORT"
	Parent  = "SB_BUILD_DXE_FLAG_LIST"
	Token = "SB_USB_BATTERY_CHARGE_SUPPORT" "=" "1"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "/D SB_USB_BATTERY_CHARGE_SUPPORT"
	Parent  = "SB_BUILD_PEI_FLAG_LIST"
	Token = "SB_USB_BATTERY_CHARGE_SUPPORT" "=" "1"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "/D SB_TIMER_TICK_INTERVAL_WA"
	Parent  = "SB_BUILD_DXE_FLAG_LIST"
	Token = "SB_TIMER_TICK_INTERVAL_WA" "=" "1"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "/D ENABLE_SB_BOOT_SCRIPT_SAVE"
	Parent  = "SB_BUILD_DXE_FLAG_LIST"
	Token = "SB_S3_SMI_SUPPORT" "=" "0"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "/D XHCI_SUPPORT"
	Parent  = "SB_BUILD_DXE_FLAG_LIST"
	Token = "XHCI_Firmware_Support" "=" "1"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "/D XHCI_SUPPORT"
	Parent  = "SB_BUILD_PEI_FLAG_LIST"
	Token = "XHCI_Firmware_Support" "=" "1"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "$(SB_DIR)\SbCmos.ssp"
	Parent  = "ADDON_SSP_FILES"
	Token = "CMOS_MANAGER_SUPPORT" "=" "1"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "SBGeneric"
	Parent  = "AMI_CSP_LIBRARIES"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "SbConfigurationList"
	InvokeOrder = ReplaceParent
End

ELINK
	Name = "SbResetCallbackList"
	InvokeOrder = ReplaceParent
End

ELINK
	Name  = "AmiDxeLib"
	Parent  = "AMI_CSP_DXE_LIBRARIES"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "AmiPeiLib"
	Parent  = "AMI_CSP_PEI_LIBRARIES"
	InvokeOrder = AfterParent
End

ELINK
    Name = "SbIsDefaultConfigMode,"
    Parent = "IsResetConfigMode "
    Help = "If you want to keep the password, you will need to change Parent to IsDefaultConfigMode."
    InvokeOrder = AfterParent
End

ELINK
	Name  = "SbTimerSaveRestoreRegistersCallbacks"
	InvokeOrder = ReplaceParent
End

ELINK
	Name  = "AmiChipsetModulePkg/Include/Sb.h"
	Parent  = "TEST_ELINK_INCLUDE"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "SB_OEM_S3_WARMRESET_CALLBACK_LIST"
	Token = "SecureMod_SUPPORT" "=" "1"
	InvokeOrder = ReplaceParent
End

ELINK
	Name  = "AmiChipsetPkg/AmiChipsetPkg.dec"
	Parent  = "AMI_CSP_PACKAGES"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "SbPlatformHookBeforeSmmDispatch,"
	Parent  = "PLATFORMHOOK_BEFORE_AFTER_SMMDISPATCH"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "SbPlatformHookAfterSmmDispatch,"
	Parent  = "PLATFORMHOOK_BEFORE_AFTER_SMMDISPATCH"
	InvokeOrder = AfterParent
End

#ELINK
 #  Name  = "SbPlatformHookBeforeAfterSmmDispatch,"
  # Parent  = "PLATFORMHOOK_BEFORE_AFTER_SMMDISPATCH"
   #InvokeOrder = AfterParent
#End
ELINK
	Name  = "ChipsetDisablePowerButton,"
	Parent  = "DisablePowerButton,"
	Token = "DISABLE_PWR_BUTTON" "=" "1"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "ChipsetEnablePowerButton,"
	Parent  = "EnablePowerButton,"
	Token = "DISABLE_PWR_BUTTON" "=" "1"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "FchRecoveryInsertOEMTableBeforeFlash,"
	Parent  = "OemBeforeFlashUpdateList"
	InvokeOrder = AfterParent
End

OUTPUTREGISTER
	Name  = "SbElinkList"
	Path  = "Build"
	File  = "SbElinks.h"
	Template  = "Elink/SbElinks.txt"
	End
INFComponent
	Name  = "SbPei"
	File  = "SbPei.inf"
	Package  = "AmiChipsetModulePkg"
	ModuleTypes  = "PEIM"
	Path  = "SB_INIT_DIR"
End

INFComponent
	Name  = "SbDxe"
	File  = "SbDxe.inf"
	Package  = "AmiChipsetModulePkg"
	ModuleTypes  = "DXE_DRIVER"
	Path  = "SB_INIT_DIR"
End
INFComponent
	Name  = "SbCmos"
	File  = "SbCmos.inf"
	Package  = "AmiChipsetModulePkg"
	ModuleTypes  = "DXE_DRIVER"
	Path  = "SB_INIT_DIR"
End
FFS_FILE
	Name  = "SbCmos"
	FD_AREA  = "FV_MAIN"
	INFComponent  = "AmiChipsetModulePkg.SbCmos"
	Apriori_Index  = "2"
End

INFComponent
	Name  = "SbRun"
	File  = "SbRun.inf"
	Package  = "AmiChipsetModulePkg"
	ModuleTypes  = "DXE_RUNTIME_DRIVER"
	Path  = "SB_INIT_DIR"
End

INFComponent
	Name  = "SbRunSmm"
	File  = "SbRunSmm.inf"
	Package  = "AmiChipsetModulePkg"
	ModuleTypes  = "DXE_SMM_DRIVER"
	Path  = "SB_INIT_DIR"
End

INFComponent
	Name  = "ResetSmi"
	File  = "ResetSmi.inf"
	Package  = "AmiChipsetModulePkg"
	ModuleTypes  = "DXE_SMM_DRIVER"
	Path  = "SB_INIT_DIR"
End

INFComponent
    Name  = "PeriodicSmiControl"
    File  = "PeriodicSmiControl.inf"
    Package  = "AmiChipsetModulePkg"
    ModuleTypes  = "DXE_SMM_DRIVER"
    Path  = "SB_INIT_DIR"
End

INFComponent
	Name  = "SBSata"
	File  = "SbIde/SBSata.inf"
	Package  = "AmiChipsetModulePkg"
	ModuleTypes  = "DXE_RUNTIME_DRIVER"
	Path  = "SB_DIR"
End

#INFComponent
#	Name  = "LegacyInterrupt"
#	File  = "LegacyInterrupt/LegacyInterrupt.inf"
#	Package  = "AmiChipsetModulePkg"
#	ModuleTypes  = "DXE_DRIVER"
#	Path  = "SB_DIR"
#	Token = "CSM_SUPPORT" "=" "1"
#End

INFComponent
	Name  = "PowerButton"
	File  = "PowerButton/PowerButton.inf"
	Package  = "AmiChipsetModulePkg"
	ModuleTypes  = "DXE_SMM_DRIVER"
	Path  = "SB_DIR"
End
INFComponent
	Name  = "HygonFchFirmware"
	File  = "HygonFchFirmware/HygonFchFirmware.inf"
	Package  = "AmiChipsetModulePkg"
	ModuleTypes  = "USER_DEFINED"
	Path  = "SB_DIR"
End

INFComponent
	Name  = "SBGeneric"
	File  = "SBGeneric.inf"
	Package  = "AmiChipsetModulePkg"
	Path  = "SB_CSPLIB_DIR"
End

INFComponent
	Name  = "SBGenericRuntime"
	File  = "SBGenericRuntime.inf"
	Package  = "AmiChipsetModulePkg"
	Path  = "SB_CSPLIB_DIR"
End

INFComponent
	Name  = "SbPeiGetSetupData"
	File  = "SbGetSetupData/SbPeiGetSetupData.inf"
	Package  = "AmiChipsetModulePkg"
	Path  = "SB_LIBRARY_DIR"
End

INFComponent
	Name  = "SbGetSetupData"
	File  = "SbGetSetupData/SbGetSetupData.inf"
	Package  = "AmiChipsetModulePkg"
	Path  = "SB_LIBRARY_DIR"
End

INFComponent
	Name  = "SbSecLib"
	File  = "SbSecLib/SbSecLib.inf"
	Package  = "AmiChipsetModulePkg"
	Path  = "SB_LIBRARY_DIR"
End
	
INFComponent
	Name  = "SbAcpiTimerLib"
	File  = "SbAcpiTimerLib/SbAcpiTimerLib.inf"
	Package  = "AmiChipsetModulePkg"
	Path  = "SB_LIBRARY_DIR"
	Token = "CPU_TIMER_LIB_SUPPORT" "=" "0"
End

INFComponent
	Name  = "SbPeiDebugger"
	File  = "SbPeiDebuggerLib/SbPeiDebuggerLib.inf"
	Package  = "$(SB_PKG_NAME)"
	Path  = "SB_LIBRARY_DIR"
End

INFComponent
	Name  = "SbSmmLib"
	File  = "SbSmmLib/SbSmmLib.inf"
	Package  = "AmiChipsetModulePkg"
	Path  = "SB_LIBRARY_DIR"
End

INFComponent
	Name  = "SbSmmCorePlatformHookLib"
	File  = "SbSmmCorePlatformHookLib/SbSmmCorePlatformHookLib.inf"
	Package  = "AmiChipsetModulePkg"
	Path  = "SB_LIBRARY_DIR"
	Token = "SMM_SUPPORT" "=" "1"
End
INFComponent
	Name  = "SbRuntimeServiceLib"
	File  = "SbRuntimeServiceLib/SbRuntimeServiceLib.inf"
	Package  = "AmiChipsetModulePkg"
	Path  = "SB_LIBRARY_DIR"
End
INFComponent
	Name  = "SbResetServiceElinkLib"
	File  = "SbResetServiceElinkLib/SbResetServiceElinkLib.inf"
	Package  = "AmiChipsetModulePkg"
	Path  = "SB_LIBRARY_DIR"
End

INFComponent
	Name  = "SbSmmResetServiceElinkLib"
	File  = "SbResetServiceElinkLib/SbSmmResetServiceElinkLib.inf"
	Package  = "AmiChipsetModulePkg"
	Path  = "SB_LIBRARY_DIR"
End

INFComponent
	Name  = "SbPciDxeInitLib"
	File  = "SbPciDxeInitLib/SbPciDxeInitLib.inf"
	Package  = "AmiChipsetModulePkg"
	Path  = "SB_LIBRARY_DIR"
End

INFComponent
	Name  = "SbRtcLib"
	File  = "SbRtcLib/SbRtcLib.inf"
	Package  = "AmiChipsetModulePkg"
	Path  = "SB_LIBRARY_DIR"
End

INFComponent
	Name  = "SbGetCapsuleFlagLib"
	File  = "SbGetCapsuleFlagLib/SbGetCapsuleFlagLib.inf"
	Package  = "AmiChipsetModulePkg"
	Path  = "SB_LIBRARY_DIR"
End

INFComponent
	Name  = "SbGetCapsuleFlagDxeLib"
	File  = "SbGetCapsuleFlagLib/SbGetCapsuleFlagDxeLib.inf"
	Package  = "AmiChipsetModulePkg"
	Path  = "SB_LIBRARY_DIR"
End
INFComponent
	Name  = "SbResetLib"
	File  = "SbResetLib/SbResetLib.inf"
	Package  = "AmiChipsetModulePkg"
	Path  = "SB_LIBRARY_DIR"
End
INFComponent
	Name  = "SbResetSmmLib"
	File  = "SbResetLib/SbResetSmmLib.inf"
	Package  = "AmiChipsetModulePkg"
	Path  = "SB_LIBRARY_DIR"
End
INFComponent
    Name  = "SbCspIoDecodeLib"
    File  = "SbCspIoDecodeLib/SbCspIoDecodeLib.inf"
    Package  = "AmiChipsetModulePkg"
    Path  = "SB_LIBRARY_DIR"
End

INFComponent
	Name  = "SbFchNcbUpdateLib"
	File  = "Library/SbFchNcbUpdateLib/SbFchNcbUpdateLib.inf"
	Package  = "AmiChipsetModulePkg"
	ModuleTypes  = "DXE_SMM_DRIVER"
End

LibraryMapping
	Class  = "SBGeneric"
	Instance  = "AmiChipsetModulePkg.SBGeneric"
End

LibraryMapping
	Class  = "SBGeneric"
	Instance  = "AmiChipsetModulePkg.SBGenericRuntime"
	ModuleTypes  = "DXE_RUNTIME_DRIVER"
End

LibraryMapping
	Class  = "SbGetSetupData"
	Instance  = "AmiChipsetModulePkg.SbPeiGetSetupData"
	ModuleTypes  = "PEIM"
End

LibraryMapping
	Class  = "SbGetSetupData"
	Instance  = "AmiChipsetModulePkg.SbGetSetupData"
	ModuleTypes  = "DXE_DRIVER DXE_RUNTIME_DRIVER DXE_SMM_DRIVER"
End

LibraryMapping
	Class  = "TimerLib"
	Instance  = "AmiChipsetModulePkg.SbAcpiTimerLib"
	Token = "CPU_TIMER_LIB_SUPPORT" "=" "0"
End

LibraryMapping
	Class  = "DebugPortingLib"
	Instance  = "$(SB_PKG_NAME).SbPeiDebugger"
End

LibraryMapping
	Class  = "SmmLib"
	Instance  = "AmiChipsetModulePkg.SbSmmLib"
	Token = "SMM_SUPPORT" "=" "1"
End

LibraryMapping
	Class  = "NULL"
	Instance  = "AmiChipsetModulePkg.SbSmmCorePlatformHookLib"
	Override  = "MdeModulePkg.PiSmmCore"
End

LibraryMapping
	Class  = "NULL"
	Instance  = "AmiChipsetModulePkg.SbSecLib"
	ModuleTypes  = "SEC"
	Override  = "AmiCpuPkg.SecCore"
End

LibraryMapping
	Class  = "AmiChipsetRuntimeServiceLib"
	Instance  = "AmiChipsetModulePkg.SbRuntimeServiceLib"
	ModuleTypes  = "DXE_SMM_DRIVER DXE_RUNTIME_DRIVER"
End

LibraryMapping
	Class  = "NULL"
	Instance  = "AmiChipsetModulePkg.SbResetServiceElinkLib"
	ModuleTypes  = "DXE_RUNTIME_DRIVER"
	Override  = "AmiChipsetModulePkg.SbRun"
End

LibraryMapping
	Class  = "NULL"
	Instance  = "AmiChipsetModulePkg.SbSmmResetServiceElinkLib"
	ModuleTypes  = "DXE_SMM_DRIVER"
	Override  = "AmiChipsetModulePkg.SbRunSmm"
End

LibraryMapping
	Class  = "NULL"
	Instance  = "AmiChipsetModulePkg.SbPciDxeInitLib"
	ModuleTypes  = "DXE_DRIVER"
	Override  = "AmiModulePkg.PciDxeInit"
End

LibraryMapping
	Class  = "SbRtcLib"
	Instance  = "AmiChipsetModulePkg.SbRtcLib"
End

LibraryMapping
	Class  = "SbGetCapsuleFlagLib"
	Instance  = "AmiChipsetModulePkg.SbGetCapsuleFlagLib"
	ModuleTypes  = "PEIM"
End

LibraryMapping
	Class  = "SbGetCapsuleFlagLib"
	Instance  = "AmiChipsetModulePkg.SbGetCapsuleFlagDxeLib"
	ModuleTypes  = "DXE_RUNTIME_DRIVER DXE_SMM_DRIVER"
End

LibraryMapping
	Class  = "SbResetLib"
	Instance  = "AmiChipsetModulePkg.SbResetLib"
	ModuleTypes  = "DXE_RUNTIME_DRIVER"
End

LibraryMapping
	Class  = "SbResetLib"
	Instance  = "AmiChipsetModulePkg.SbResetSmmLib"
	ModuleTypes  = "DXE_SMM_DRIVER"
End

LibraryMapping
	Class  = "NULL"
	Instance  = "AmiChipsetModulePkg.SbResetSmmLib"
	ModuleTypes  = "DXE_SMM_DRIVER"
	Override  = "AmiModulePkg.SecSmiFlash"
End

LibraryMapping
    Class  = "AmiIoDecodeLib"
    Instance  = "AmiChipsetModulePkg.SbCspIoDecodeLib"
End

LibraryMapping
	Class  = "NULL"
	Instance  = "AmiChipsetModulePkg.SbFchNcbUpdateLib"
	ModuleTypes  = "DXE_SMM_DRIVER"
	Override  = "AmiModulePkg.Reflash"
End

PcdMapping
	Name  = "PcdFchOemBeforePciRestoreSwSmi"
	GuidSpace  = "gEfiAmdAgesaPkgTokenSpaceGuid"
	PcdType  = "PcdsFixedAtBuild"
	Value  = "$(SB_BEFORE_PCI_RESTORE_SWSMI)"
	Offset  = 00h
	Length  = 01h
	TargetDSC = Yes
End

PcdMapping
	Name  = "PcdFchOemAfterPciRestoreSwSmi"
	GuidSpace  = "gEfiAmdAgesaPkgTokenSpaceGuid"
	PcdType  = "PcdsFixedAtBuild"
	Value  = "$(SB_AFTER_PCI_RESTORE_SWSMI)"
	Offset  = 00h
	Length  = 01h
	TargetDSC = Yes
End

PcdMapping
	Name  = "PcdFchOemEnableAcpiSwSmi"
	GuidSpace  = "gEfiAmdAgesaPkgTokenSpaceGuid"
	PcdType  = "PcdsFixedAtBuild"
	Value  = "$(SW_SMI_ACPI_ENABLE)"
	Offset  = 00h
	Length  = 01h
	TargetDSC = Yes
End

PcdMapping
	Name  = "PcdFchOemDisableAcpiSwSmi"
	GuidSpace  = "gEfiAmdAgesaPkgTokenSpaceGuid"
	PcdType  = "PcdsFixedAtBuild"
	Value  = "$(SW_SMI_ACPI_DISABLE)"
	Offset  = 00h
	Length  = 01h
	TargetDSC = Yes
End

PcdMapping
	Name  = "PcdFchOemSpiUnlockSwSmi"
	GuidSpace  = "gEfiAmdAgesaPkgTokenSpaceGuid"
	PcdType  = "PcdsFixedAtBuild"
	Value  = "0xB7"
	Offset  = 00h
	Length  = 01h
	TargetDSC = Yes
End

PcdMapping
	Name  = "PcdFchOemSpiLockSwSmi"
	GuidSpace  = "gEfiAmdAgesaPkgTokenSpaceGuid"
	PcdType  = "PcdsFixedAtBuild"
	Value  = "0xB8"
	Offset  = 00h
	Length  = 01h
	TargetDSC = Yes
End

PcdMapping
	Name  = "PcdFchOemStartTimerSmi"
	GuidSpace  = "gEfiAmdAgesaPkgTokenSpaceGuid"
	PcdType  = "PcdsFixedAtBuild"
	Value  = "$(SB_START_TIMER_SMI)"
	Offset  = 00h
	Length  = 01h
	TargetDSC = Yes
End

PcdMapping
	Name  = "PcdFchOemStopTimerSmi"
	GuidSpace  = "gEfiAmdAgesaPkgTokenSpaceGuid"
	PcdType  = "PcdsFixedAtBuild"
	DataType  = "Uint8"
	Value  = "$(SB_STOP_TIMER_SMI)"
	Offset  = 00h
	Length  = 01h
	TargetDSC = Yes
End


PcdMapping
    Name  = "PcdAmdFchCfgAcpiPm1EvtBlkAddr"
    GuidSpace  = "gEfiAmdAgesaPkgTokenSpaceGuid"
    PcdType  = "PcdsFixedAtBuild"
    DataType  = "Uint16"
    Value  = "$(PM1A_EVT_BLK_ADDRESS)"
    Offset  = 00h
    Length  = 02h
    TargetDSC = Yes
End

PcdMapping
    Name  = "PcdAmdFchCfgAcpiPm1CntBlkAddr"
    GuidSpace  = "gEfiAmdAgesaPkgTokenSpaceGuid"
    PcdType  = "PcdsFixedAtBuild"
    DataType  = "Uint16"
    Value  = "$(PM1A_CNT_BLK_ADDRESS)"
    Offset  = 00h
    Length  = 02h
    TargetDSC = Yes
End

PcdMapping
    Name  = "PcdAmdFchCfgAcpiPmTmrBlkAddr"
    GuidSpace  = "gEfiAmdAgesaPkgTokenSpaceGuid"
    PcdType  = "PcdsFixedAtBuild"
    DataType  = "Uint16"
    Value  = "$(PM_TMR_BLK_ADDRESS)"
    Offset  = 00h
    Length  = 02h
    TargetDSC = Yes
End

PcdMapping
    Name  = "PcdAmdFchCfgCpuControlBlkAddr"
    GuidSpace  = "gEfiAmdAgesaPkgTokenSpaceGuid"
    PcdType  = "PcdsFixedAtBuild"
    DataType  = "Uint16"
    Value  = "$(PBLK)"
    Offset  = 00h
    Length  = 02h
    TargetDSC = Yes
End

PcdMapping
    Name  = "PcdAmdFchCfgAcpiGpe0BlkAddr"
    GuidSpace  = "gEfiAmdAgesaPkgTokenSpaceGuid"
    PcdType  = "PcdsFixedAtBuild"
    DataType  = "Uint16"
    Value  = "$(GPE0_BLK_ADDRESS)"
    Offset  = 00h
    Length  = 02h
    TargetDSC = Yes
End

PcdMapping
    Name  = "PcdAmdFchCfgSmiCmdPortAddr"
    GuidSpace  = "gEfiAmdAgesaPkgTokenSpaceGuid"
    PcdType  = "PcdsDynamicDefault"
    DataType  = "Uint16"
    Value  = "$(SW_SMI_IO_ADDRESS)"
    Offset  = 00h
    Length  = 02h
    TargetDSC = Yes
End

PcdMapping
	Name  = "PcdNoneSioKbcSupport"
	GuidSpace  = "gEfiAmdAgesaModulePkgTokenSpaceGuid"
	PcdType  = "PcdsDynamicDefault"
	DataType  = "Boolean"
	Value  = "$(NONE_SIO_KBC_SUPPORT)"
	Offset  = 00h
	Length  = 01h
	TargetDSC = Yes
End

FFS_FILE
	Name  = "XhciRecoveryFirmware"
	FD_AREA  = "FV_BB"
	FILE_Stmt  = "AmiChipsetModulePkg\LegacyRom\Xhci\XhciRecoveryFirmware.txt"
	Token = "XHCI_RECOVERY_PATH_MODE" "=" "1"
End

FD_AREA
	Name  = "FchFirmwareHeader"
	TYPE  = "RAW"
	FD_INFO  = "AMIROM"
	Offset  = "$(FCH_FIRMWARE_OFFSET)"
	Size  = "$(ROMSIG_SIZE)"
	Attributes  = "0x0"
	File  = "$(OUTPUT_DIRECTORY)/$(TARGET)_$(TOOL_CHAIN_TAG)/X64/AmiChipsetModulePkg/SB/HygonFchFirmware/HygonFchFirmware/OUTPUT/HygonFchFirmware.bin"
End

#FD_AREA
#	Name  = "XhciFirmwareKern"
#	TYPE  = "RAW"
#	FD_INFO  = "AMIROM"
#	Offset  = "$(XHCI_FIRMWARE_BASE) - ( 0xFFFFFFFF - $(FLASH_SIZE) + 1 )"
#	Size  = "$(XHCI_FIRWARE_SIZE)"
#	Attributes  = "0x0"
#	File  = "AmiChipsetModulePkg\LegacyRom\Xhci\KernXhc.rom"
#	Token = "FCH_FW_FAMILY" "=" "6"
#End

RSVCHIPSET
	Name  = "ACPI PM Registers"
	BASEADDR  = "$(PM_BASE_ADDRESS)"
	LENGTH  = "$(PM_BASE_LENGTH)"
	TYPE  = "EfiGcdIoTypeIo"
	ATTRIBUTES  = "-1"
	Token = "PM_BASE_ADDRESS" "!=" "0"
End

RSVCHIPSET
	Name  = "SMBUS Block Registers"
	BASEADDR  = "$(SMBUS_BASE_ADDRESS)"
	LENGTH  = "$(SMBUS_BASE_LENGTH)"
	TYPE  = "EfiGcdIoTypeIo"
	ATTRIBUTES  = "-1"
	Token = "SMBUS_BASE_ADDRESS" "!=" "0"
End

RSVCHIPSET
	Name  = "SMBUS - ASF Block Registers"
	BASEADDR  = "$(SMBUS1_BASE_ADDRESS)"
	LENGTH  = "$(SMBUS1_BASE_LENGTH)"
	TYPE  = "EfiGcdIoTypeIo"
	ATTRIBUTES  = "-1"
	Token = "SMBUS1_BASE_ADDRESS" "!=" "0"
End

RSVCHIPSET
	Name  = "FCH - IO - C00 Block Registers"
	BASEADDR  = "0xC00"
	LENGTH  = "2"
	TYPE  = "EfiGcdIoTypeIo"
	ATTRIBUTES  = "-1"
End

RSVCHIPSET
	Name  = "FCH - IO - C50 Block Registers"
	BASEADDR  = "0xC50"
	LENGTH  = "2"
	TYPE  = "EfiGcdIoTypeIo"
	ATTRIBUTES  = "-1"
End

RSVCHIPSET
	Name  = "FCH - IO - CD0 Block Registers"
	BASEADDR  = "0xCD0"
	LENGTH  = "2"
	TYPE  = "EfiGcdIoTypeIo"
	ATTRIBUTES  = "-1"
End

RSVCHIPSET
	Name  = "FCH - IO - CD4 Block Registers"
	BASEADDR  = "0xCD4"
	LENGTH  = "2"
	TYPE  = "EfiGcdIoTypeIo"
	ATTRIBUTES  = "-1"
End

RSVCHIPSET
	Name  = "FCH - IO - CD6 Block Registers"
	BASEADDR  = "0xCD6"
	LENGTH  = "2"
	TYPE  = "EfiGcdIoTypeIo"
	ATTRIBUTES  = "-1"
End

RSVCHIPSET
	Name  = "FCH - ALINK Block Registers"
	BASEADDR  = "0xCD8"
	LENGTH  = "8"
	TYPE  = "EfiGcdIoTypeIo"
	ATTRIBUTES  = "-1"
End

RSVCHIPSET
	Name  = "IOAPIC Dedicated Space"
	BASEADDR  = "$(APCB)"
	LENGTH  = "0x1000"
	TYPE  = "EfiGcdMemoryTypeMemoryMappedIo"
    ATTRIBUTES  = "0x8000000000000001"
	Token = "APCB" "!=" "0"
End

RSVCHIPSET
	Name  = "HPET Memory Mapped Space"
	BASEADDR  = "$(HPET_BASE_ADDRESS)"
	LENGTH  = "0x1000"
	TYPE  = "EfiGcdMemoryTypeMemoryMappedIo"
    ATTRIBUTES  = "0x8000000000000001"
	Token = "HPET_SUPPORT" "=" "1"
End

RSVCHIPSET
	Name  = "TPM Memory Mapped Space"
	BASEADDR  = "0xFED40000"
	LENGTH  = "0x5000"
	TYPE  = "EfiGcdMemoryTypeMemoryMappedIo"
    ATTRIBUTES  = "0x8000000000000001"
	Token = "PORT_TPM_IOMEMBASE" "!=" "0"
End

#RSVCHIPSET
#	Name  = "Flash resources Region - Reserved with Write Protected attributes"
#	BASEADDR  = "0xFFFFFFFF-$(FLASH_SIZE)+1"
#	LENGTH  = "$(FLASH_SIZE)"
#	TYPE  = "EfiGcdMemoryTypeMemoryMappedIo"
#	ATTRIBUTES  = "0x8000000000000001"
#End

RSVCHIPSET
	Name  = "Flash resources Region - Reserved with Write Protected attributes"
	BASEADDR  = "0xFF000000"
	LENGTH  = "0x1000000"
	TYPE  = "EfiGcdMemoryTypeMemoryMappedIo"
    ATTRIBUTES  = "0x8000000000000001"
End

RSVCHIPSET
	Name  = "SPI Memory Mapped Space"
	BASEADDR  = "$(SPI_BASE_ADDRESS)"
	LENGTH  = "0x1000"
	TYPE  = "EfiGcdMemoryTypeMemoryMappedIo"
    ATTRIBUTES  = "0x8000000000000001"
	Token = "SPIFlash_SUPPORT" "=" "1"
End

RSVCHIPSET
	Name  = "FCH Memory Mapped Space"
	BASEADDR  = "$(SB_MMIO_BASE)"
	LENGTH  = "0x10000"
	TYPE  = "EfiGcdMemoryTypeMemoryMappedIo"
	ATTRIBUTES  = "0x8000000000000001"
	Token = "SB_MMIO_SUPPORT" "=" "1"
End

RSVCHIPSET
	Name  = "FCH Watchdog Timer Memory Mapped Space"
	BASEADDR  = "$(WDT_BASE_ADDRESS)"
	LENGTH  = "$(WDT_BASE_LENGTH)"
	TYPE  = "EfiGcdMemoryTypeMemoryMappedIo"
    ATTRIBUTES  = "0x8000000000000001"
	Token = "WDT_SUPPORT" "=" "1"
End

RSVCHIPSET
    Name  = "FCH AL2AHB Configuration Space"
    BASEADDR  = "0xFEDC0000"
    LENGTH  = "0x1000"
    TYPE  = "EfiGcdMemoryTypeMemoryMappedIo"
    ATTRIBUTES  = "0x8000000000000001"
End

RSVCHIPSET
    Name  = "FCH I2C Configuration Space"
    BASEADDR  = "0xFEDC2000"
    LENGTH  = "0x4000"
    TYPE  = "EfiGcdMemoryTypeMemoryMappedIo"
    ATTRIBUTES  = "0x8000000000000001"
End

RSVCHIPSET
	Name  = "FCH UART0 Configuration Space"
	BASEADDR  = "0xFEDC6000"
	LENGTH  = "0x1000"
	TYPE  = "EfiGcdMemoryTypeMemoryMappedIo"
    ATTRIBUTES  = "0x8000000000000001"
End

RSVCHIPSET
	Name  = "FCH DMA Configuration Space"
	BASEADDR  = "0xFEDC7000"
	LENGTH  = "0x1000"
	TYPE  = "EfiGcdMemoryTypeMemoryMappedIo"
    ATTRIBUTES  = "0x8000000000000001"
End

RSVCHIPSET
	Name  = "FCH UART1 Configuration Space"
	BASEADDR  = "0xFEDC8000"
	LENGTH  = "0x1000"
	TYPE  = "EfiGcdMemoryTypeMemoryMappedIo"
    ATTRIBUTES  = "0x8000000000000001"
End

TOKEN
    Name  = "FCH_UART_DEBUG_SELECT"
    Value  = "0"
    Help  = "0: Disable,1:UART0,2:UART1. Select Fch Uart port as debug port."
    TokenType = Integer
    TargetH = Yes
End

TOKEN
    Name  = "FCH_UART_BASE_ADDRESS"
    Value  = "0xFEDC6000"
    Help  = "UART0 BASE ADDRESS"
    TokenType = Integer
    TargetH = Yes
    Token = "FCH_UART_DEBUG_SELECT" "=" "1"
End

TOKEN
    Name  = "FCH_UART_BASE_ADDRESS"
    Value  = "0xFEDC8000"
    Help  = "UART0 BASE ADDRESS"
    TokenType = Integer
    TargetH = Yes
    Token = "FCH_UART_DEBUG_SELECT" "=" "2"
End

TOKEN
	Name  = "FCH_CHK_SERIAL_CABLE"
	Value  = "1"
	Help  = "Skip serial output if no cable connected to save boot time."
	TokenType = Boolean
	TargetH = Yes	
End

TOKEN
    Name  = "ICAE"
    Value  = "0xF"
    Help  = "I2CA Device enable"
    TokenType = Integer
    TargetASL = Yes
End

TOKEN
    Name  = "ICBE"
    Value  = "0xF"
    Help  = "I2CB Device enable"
    TokenType = Integer
    TargetASL = Yes
End

TOKEN
    Name  = "ICCE"
    Value  = "0xF"
    Help  = "I2CC Device enable"
    TokenType = Integer
    TargetASL = Yes
End

TOKEN
    Name  = "ICDE"
    Value  = "0xF"
    Help  = "I2CD Device enable"
    TokenType = Integer
    TargetASL = Yes
End

TOKEN
    Name  = "ICEE"
    Value  = "0xF"
    Help  = "I2CE Device enable"
    TokenType = Integer
    TargetASL = Yes
End

TOKEN
    Name  = "ICFE"
    Value  = "0xF"
    Help  = "I2CF Device enable"
    TokenType = Integer
    TargetASL = Yes
End

INFComponent
    Name  = "SbSerialPortLib"
    File  = "SbSerialPortLib/SbSerialPortLib.inf"
    Package  = "AmiChipsetModulePkg"
    Path  = "SB_LIBRARY_DIR"
End

LibraryMapping
    Class  = "SerialPortLib"
    Instance  = "AmiChipsetModulePkg.SbSerialPortLib"
    Help  = "Use FCH UART to trace message."
    Token = "FCH_UART_DEBUG_SELECT" "!=" "0"
End

INFComponent
	Name  = "SbSerialPortLibRuntime"
	File  = "SbSerialPortLib/SbSerialPortLibRuntime.inf"
	Package  = "AmiChipsetModulePkg"
        Path  = "SB_LIBRARY_DIR"
End

LibraryMapping
	Class  = "SerialPortLib"
	Instance  = "AmiChipsetModulePkg.SbSerialPortLibRuntime"
	ModuleTypes  = "DXE_RUNTIME_DRIVER"
	Token = "FCH_UART_DEBUG_SELECT" "!=" "0"
End

TOKEN
	Name  = "UTDB"
	Value  = "$(FCH_UART_DEBUG_SELECT)"
	Help  = "0: Disable,1:UART0,2:UART1. Select Fch Uart port as debug port."
	TokenType = Integer
	TargetASL = Yes
	Lock = Yes
End

PcdMapping
    Name  = "PcdResetMode"
    GuidSpace  = "gEfiAmdAgesaModulePkgTokenSpaceGuid"
    PcdType  = "PcdsDynamicDefault"
    DataType  = "Uint8"
    Value  = "0x7" 
    Offset  = 00h
    Length  = 01h
    Help  = "SPI mode default: FCH_SPI_MODE_FAST 0x7  "
    TargetDSC = Yes
End

TOKEN
	Name  = "LEGACY_UART_INPUT_CLOCK"
	Value  = "1843200"
	Help  = "Legacy UART input clock frequency"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "FchRTDeviceEnableMapToken"
	Value  = "0"
	Help  = "1=Enabled on platform 0=disabled on platform\ UART0=bit11, UART1=bit12, UART2=bit16, UART3=bit26."
	TokenType = Integer
	TargetH = Yes
	Range  = "0...0FFFFh"
End

PcdMapping
	Name        = "FchRTDeviceEnableMap"
	GuidSpace   = "gEfiAmdAgesaModulePkgTokenSpaceGuid"
	PcdType     = "PcdsDynamicDefault"
	DataType    = "Uint32"
	Value       = "$(FchRTDeviceEnableMapToken)"
	Offset      = 00h
	Length      = 01h
	TargetDSC   = Yes
End

TOKEN
	Name  = "FchUart0LegacyEnableToken"
	Value  = "0"
	Help  = "0=Disabled 1=0x2E8 (COM4), 2=0x2F8 (COM2), 3=0x3E8 (COM3), 4=0x3F8 (COM1)"
	TokenType = Integer
	TargetH = Yes
	Range  = "0...0FFFFh"
End

PcdMapping
	Name        = "FchUart0LegacyEnable"
	GuidSpace   = "gEfiAmdAgesaModulePkgTokenSpaceGuid"
	PcdType     = "PcdsDynamicDefault"
	DataType    = "Uint8"
	Value       = "$(FchUart0LegacyEnableToken)"
	Offset      = 00h
	Length      = 01h
	TargetDSC   = Yes
End

TOKEN
	Name  = "FchUart1LegacyEnableToken"
	Value  = "0"
	Help  = "0=Disabled 1=0x2E8 (COM4), 2=0x2F8 (COM2), 3=0x3E8 (COM3), 4=0x3F8 (COM1)"
	TokenType = Integer
	TargetH = Yes
	Range  = "0...0FFFFh"
End

PcdMapping
	Name        = "FchUart1LegacyEnable"
	GuidSpace   = "gEfiAmdAgesaModulePkgTokenSpaceGuid"
	PcdType     = "PcdsDynamicDefault"
	DataType    = "Uint8"
	Value       = "$(FchUart1LegacyEnableToken)"
	Offset      = 00h
	Length      = 01h
	TargetDSC   = Yes
End

TOKEN
	Name  = "FchUart2LegacyEnableToken"
	Value  = "0"
	Help  = "0=Disabled 1=0x2E8 (COM4), 2=0x2F8 (COM2), 3=0x3E8 (COM3), 4=0x3F8 (COM1)"
	TokenType = Integer
	TargetH = Yes
	Range  = "0...0FFFFh"
End

PcdMapping
	Name        = "FchUart2LegacyEnable"
	GuidSpace   = "gEfiAmdAgesaModulePkgTokenSpaceGuid"
	PcdType     = "PcdsDynamicDefault"
	DataType    = "Uint8"
	Value       = "$(FchUart2LegacyEnableToken)"
	Offset      = 00h
	Length      = 01h
	TargetDSC   = Yes
End

TOKEN
	Name  = "FchUart3LegacyEnableToken"
	Value  = "0"
	Help  = "0=Disabled 1=0x2E8 (COM4), 2=0x2F8 (COM2), 3=0x3E8 (COM3), 4=0x3F8 (COM1)"
	TokenType = Integer
	TargetH = Yes
	Range  = "0...0FFFFh"
End

PcdMapping
	Name        = "FchUart3LegacyEnable"
	GuidSpace   = "gEfiAmdAgesaModulePkgTokenSpaceGuid"
	PcdType     = "PcdsDynamicDefault"
	DataType    = "Uint8"
	Value       = "$(FchUart3LegacyEnableToken)"
	Offset      = 00h
	Length      = 01h
	TargetDSC   = Yes
End
